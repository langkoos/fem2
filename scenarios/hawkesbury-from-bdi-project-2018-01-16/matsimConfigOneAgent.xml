<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<config>

<!-- ====================================================================== -->

	<module name="TimeAllocationMutator" >
		<param name="mutationAffectsDuration" value="true" />

		<!-- Default:1800.0; Defines how many seconds a time mutation can maximally shift a time. -->
		<param name="mutationRange" value="1800.0" />
	</module>

<!-- ====================================================================== -->

	<module name="controler" >

		<!-- Default=false;  -->
		 <param name="enableLinkToLinkRouting" value="false" />

		<!-- Default=xml; Specifies the file format for writing events. Currently supported: txt, xml.
		Multiple values can be specified separated by commas (','). -->
		<param name="eventsFileFormat" value="xml" />

		<!-- Default=0;  -->
		<param name="firstIteration" value="0" />

		<!-- Default=1000;  -->
		<param name="lastIteration" value="0" />

		<!-- Defines which mobility simulation will be used. Currently supported: qsim JDEQSim
		Depending on the chosen mobsim, you'll have to add additional config modules to configure the corresponding mobsim.
		For 'qsim', add a module 'qsim' to the config. -->
		<param name="mobsim" value="qsim" />

		<param name="outputDirectory" value="./output/" />

		<!-- The type of routing (least cost path) algorithm used, may have the values: Dijkstra, FastDijkstra, AStarLandmarks or FastAStarLandmarks -->
<!-- 		<param name="routingAlgorithmType" value="Dijkstra" /> -->
		<param name= "routingAlgorithmType" value="FastAStarLandmarks" />

		<!-- An identifier for the current run which is used as prefix for output files and mentioned in output xml files etc. -->
		<param name="runId" value="run0" />

		<!-- Comma-separated list of visualizer output file formats. `transims', `googleearth', and `otfvis'. -->
		<param name="snapshotFormat" value="" />

		<!-- iterationNumber % writeEventsInterval == 0 defines in which iterations events are written to a file. `0' disables events writing completely. -->
		<param name="writeEventsInterval" value="1" />

		<!-- iterationNumber % writePlansInterval == 0 defines (hopefully) in which iterations plans are written to a file. `0' disables plans writing completely.  Some plans in early iterations are always written -->
		<param name="writePlansInterval" value="1" />

		<!-- iterationNumber % writeSnapshotsInterval == 0 defines in which iterations snapshots are written to a file. `0' disables snapshots writing completely -->
		<param name="writeSnapshotsInterval" value="10" />
	</module>

<!-- ====================================================================== -->

	<module name="counts" >

		<!-- Transport modes that will be respected for the counts comparison. 'car' is default, which includes also bussed from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />

		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the counts comparison. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeCountsInterval -->
		<param name="averageCountsOverIterations" value="5" />

		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />

		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="12000.0" />

		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="2531" />

		<!-- If true, link counts from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />

		<!-- input file name to counts package -->
		<param name="inputCountsFile" value="null" />

		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="all" />

		<!-- Specifies how often the counts comparison should be calculated and written. -->
		<param name="writeCountsInterval" value="10" />
	</module>

<!-- ====================================================================== -->

	<module name="facilities" >
		<param name="inputFacilitiesFile" value="utm_facilities.xml" />
		<param name="inputFacilityAttributesFile" value="null" />
	</module>

<!-- ====================================================================== -->

	<module name="global" >
<!-- 	<param name="coordinateSystem" value="Atlantis" /> -->
		<param name="coordinateSystem" value="GK4" />

		<!-- "global" number of threads.  This number is used, e.g., for replanning, but NOT in the mobsim.  This can typically be set to as many cores as you have available, or possibly even slightly more. -->
		<param name="numberOfThreads" value="1" />

		<param name="randomSeed" value="4711" />
	</module>

<!-- ====================================================================== -->

	<module name="households" >
		<param name="inputFile" value="null" />
		<param name="inputHouseholdAttributesFile" value="null" />
	</module>

<!-- ====================================================================== -->

	<module name="linkStats" >

		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the link statistics. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeLinkStatsInterval -->
		<param name="averageLinkStatsOverIterations" value="5" />

		<!-- Specifies how often the link stats should be calculated and written. Use 0 to disable the generation of link stats. -->
		<param name="writeLinkStatsInterval" value="10" />
	</module>

<!-- ==========================================================haw_network_newlinks============ -->

	<module name="network" >
		<param name="inputChangeEventsFile" value="change-events.xml" />
		<param name="inputNetworkFile" value="haw_network_newlinks.xml.gz" />
		<param name="laneDefinitionsFile" value="null" />
		<param name="timeVariantNetwork" value="true" />
	</module>

<!-- ====================================================================== -->

	<module name="parallelEventHandling" >

		<!-- Estimated number of events during mobsim run. An optional optimization hint for the framework. -->
		<param name="estimatedNumberOfEvents" value="null" />

		<!-- Number of threads for parallel events handler. 0 or null means the framework decides by itself. -->
		<param name="numberOfThreads" value="1" />
	</module>

<!-- ====================================================================== -->

	<module name="planCalcScore" >

		<!-- logit model scale parameter. default: 2.  Has name and default value for historical reasons (see Bryan Raney's phd thesis). -->
		<param name="BrainExpBeta" value="10.0" />

		<param name="PathSizeLogitBeta" value="1.0" />

		<!-- [utils/hr] utility for departing early (i.e. before the earliest end time).  Normally negative.  Probably implemented correctly, but not tested. -->
		<param name="earlyDeparture" value="-18.0" />

		<!-- [utils/hr] utility for arriving late (i.e. after the latest start time).  normally negative -->
		<param name="lateArrival" value="0.0" />

		<!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
		<param name="learningRate" value="1.0" />

		<!-- [utils/unit_of_money] conversion of money (e.g. toll, distance cost) into utils. Normall positive (i.e. toll/cost/fare are processed as negative amounts of money). -->
		<param name="marginalUtilityOfMoney" value="1.0" />

		<!-- [utils/hr] marginal utility of doing an activity.  normally positive.  also the opportunity cost of time if agent is doing nothing.  MATSim separates the resource value of time from the direct (dis)utility of travel time, see, e.g., Boerjesson and Eliasson, TR-A 59 (2014) 144-158. -->
		<param name="performing" value="1000.0" />

		<!-- There used to be a plateau between duration=0 and duration=zeroUtilityDuration. This caused durations to evolve to zero once they were below zeroUtilityDuration, causing problems.  Only use this switch if you need to be backwards compatible with some old results.  (changed nov'13) -->
		<param name="usingOldScoringBelowZeroUtilityDuration" value="false" />

		<!-- [utils] utility of switching a line (= transfer penalty).  Normally negative -->
		<param name="utilityOfLineSwitch" value="-1.0" />

		<!-- [utils/hr] additional marginal utility for waiting. normally negative. this comes on top of the opportunity cost of time.  Probably implemented correctly, but not tested. -->
		<param name="waiting" value="-6.0" />

		<!-- write a plans file in each iteration directory which contains what each agent actually did, and the score it received. -->
		<param name="writeExperiencedPlans" value="true" />

		<parameterset type="activityParams" >
			<param name="activityType" value="Home" />
			<param name="closingTime" value="-Infinity" />
			<param name="earliestEndTime" value="-Infinity" />
			<param name="latestStartTime" value="-Infinity" />
			<param name="minimalDuration" value="-Infinity" />
			<param name="openingTime" value="-Infinity" />
			<param name="priority" value="1.0" />
			<param name="scoringThisActivityAtAll" value="true" />
			<param name="typicalDuration" value="3600.0" />
		</parameterset>

		<parameterset type="activityParams" >
			<param name="activityType" value="Relatives" />
			<param name="closingTime" value="-Infinity" />
			<param name="earliestEndTime" value="-Infinity" />
			<param name="latestStartTime" value="-Infinity" />
			<param name="minimalDuration" value="-Infinity" />
			<param name="openingTime" value="-Infinity" />
			<param name="priority" value="1.0" />
			<param name="scoringThisActivityAtAll" value="true" />
			<param name="typicalDuration" value="3600.0" />
		</parameterset>

		<parameterset type="activityParams" >
			<param name="activityType" value="Kids" />
			<param name="closingTime" value="-Infinity" />
			<param name="earliestEndTime" value="-Infinity" />
			<param name="latestStartTime" value="-Infinity" />
			<param name="minimalDuration" value="-Infinity" />
			<param name="openingTime" value="-Infinity" />
			<param name="priority" value="1.0" />
			<param name="scoringThisActivityAtAll" value="true" />
			<param name="typicalDuration" value="3600.0" />
		</parameterset>

		<parameterset type="activityParams" >
			<param name="activityType" value="Temp" />
			<param name="closingTime" value="-Infinity" />
			<param name="earliestEndTime" value="-Infinity" />
			<param name="latestStartTime" value="-Infinity" />
			<param name="minimalDuration" value="-Infinity" />
			<param name="openingTime" value="-Infinity" />
			<param name="priority" value="1.0" />
			<param name="scoringThisActivityAtAll" value="true" />
			<param name="typicalDuration" value="3600.0" />
		</parameterset>

		<!-- activity for driveAndPickup BDI action -->
		<parameterset type="activityParams" >
			<param name="activityType" value="Pickup" />
			<param name="closingTime" value="-Infinity" />
			<param name="earliestEndTime" value="-Infinity" />
			<param name="latestStartTime" value="-Infinity" />
			<param name="minimalDuration" value="-Infinity" />
			<param name="openingTime" value="-Infinity" />
			<param name="priority" value="1.0" />
			<param name="scoringThisActivityAtAll" value="true" />
			<param name="typicalDuration" value="3600.0" />
		</parameterset>

		<!-- activity for Pickup BDI action -->
		<parameterset type="activityParams" >
			<param name="activityType" value="PICKUP" />
			<param name="closingTime" value="-Infinity" />
			<param name="earliestEndTime" value="-Infinity" />
			<param name="latestStartTime" value="-Infinity" />
			<param name="minimalDuration" value="-Infinity" />
			<param name="openingTime" value="-Infinity" />
			<param name="priority" value="1.0" />
			<param name="scoringThisActivityAtAll" value="true" />
			<param name="typicalDuration" value="3600.0" />
		</parameterset>

		<parameterset type="activityParams" >
			<param name="activityType" value="Wait" />
			<param name="closingTime" value="-Infinity" />
			<param name="earliestEndTime" value="-Infinity" />
			<param name="latestStartTime" value="-Infinity" />
			<param name="minimalDuration" value="-Infinity" />
			<param name="openingTime" value="-Infinity" />
			<param name="priority" value="1.0" />
			<param name="scoringThisActivityAtAll" value="true" />
			<param name="typicalDuration" value="3600.0" />
		</parameterset>

		<parameterset type="activityParams" >
			<param name="activityType" value="Evacuation" />
			<param name="closingTime" value="-Infinity" />
			<param name="earliestEndTime" value="-Infinity" />
			<param name="latestStartTime" value="-Infinity" />
			<param name="minimalDuration" value="-Infinity" />
			<param name="openingTime" value="-Infinity" />
			<param name="priority" value="1.0" />
			<param name="scoringThisActivityAtAll" value="true" />
			<param name="typicalDuration" value="3600.0" />
		</parameterset>

		<parameterset type="activityParams" >
			<param name="activityType" value="Safe" />
			<param name="closingTime" value="-Infinity" />
			<param name="earliestEndTime" value="-Infinity" />
			<param name="latestStartTime" value="-Infinity" />
			<param name="minimalDuration" value="-Infinity" />
			<param name="openingTime" value="-Infinity" />
			<param name="priority" value="1.0" />
			<param name="scoringThisActivityAtAll" value="true" />
			<param name="typicalDuration" value="7200.0" />
		</parameterset>

		<parameterset type="modeParams" >

			<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
			<param name="constant" value="0.0" />

			<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
			<param name="marginalUtilityOfDistance_util_m" value="0.0" />

			<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
			<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

			<param name="mode" value="car" />

			<!-- [unit_of_money/m] conversion of distance into money. Probably needs to be negative to work. -->
			<param name="monetaryDistanceRate" value="0.0" />
		</parameterset>

		<parameterset type="modeParams" >

			<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
			<param name="constant" value="0.0" />

			<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
			<param name="marginalUtilityOfDistance_util_m" value="0.0" />

			<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
			<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

			<param name="mode" value="pt" />

			<!-- [unit_of_money/m] conversion of distance into money. Probably needs to be negative to work. -->
			<param name="monetaryDistanceRate" value="0.0" />
		</parameterset>

		<parameterset type="modeParams" >

			<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
			<param name="constant" value="0.0" />

			<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
			<param name="marginalUtilityOfDistance_util_m" value="0.0" />

			<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
			<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

			<param name="mode" value="walk" />

			<!-- [unit_of_money/m] conversion of distance into money. Probably needs to be negative to work. -->
			<param name="monetaryDistanceRate" value="0.0" />
		</parameterset>

		<parameterset type="modeParams" >

			<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
			<param name="constant" value="0.0" />

			<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
			<param name="marginalUtilityOfDistance_util_m" value="0.0" />

			<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
			<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

			<param name="mode" value="bike" />

			<!-- [unit_of_money/m] conversion of distance into money. Probably needs to be negative to work. -->
			<param name="monetaryDistanceRate" value="0.0" />
		</parameterset>

		<parameterset type="modeParams" >

			<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
			<param name="constant" value="0.0" />

			<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
			<param name="marginalUtilityOfDistance_util_m" value="0.0" />

			<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
			<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

			<param name="mode" value="other" />

			<!-- [unit_of_money/m] conversion of distance into money. Probably needs to be negative to work. -->
			<param name="monetaryDistanceRate" value="0.0" />
		</parameterset>
	</module>

<!-- ====================================================================== -->

	<module name="plans" >

		<!-- String: minOfDurationAndEndTime tryEndTimeThenDuration endTimeOnly. Anything besides minOfDurationAndEndTime will internally use a different (simpler) version of the TimeAllocationMutator. -->
		<param name="activityDurationInterpretation" value="tryEndTimeThenDuration" />

		<!-- Path to a file containing person attributes (required file format: ObjectAttributes). -->
		<param name="inputPersonAttributesFile" value="null" />
		<!--    out haw_pop_one  modifiedPopFile USE gzip'd pop files?-->
		<!--<param name="inputPlansFile" value="./scenarios/hawkesbury/haw_pop_five.xml.gz" />-->
		<param name="inputPlansFile" value="haw_pop_one.xml.gz" />

		<!-- Defines how routes are stored in memory. Currently supported: LinkNetworkRoute, CompressedNetworkRoute. -->
		 <param name="networkRouteType" value="LinkNetworkRoute" />

		<!-- Name of the (Object)Attribute defining the subpopulation to which pertains a Person (as freight, through traffic, etc.). The attribute must be of String type. -->
		<param name="subpopulationAttributeName" value="subpopulation" />

	</module>

<!-- ====================================================================== -->

	<module name="planscalcroute" >

		<!-- factor with which beeline distances (and therefore times) are multiplied in order to obtain an estimate of the network distances/times.  Default is something like 1.3 -->
		<param name="beelineDistanceFactor" value="1.3" />

		<!-- All the modes for which the router is supposed to generate network routes (like car) -->
		<param name="networkModes" value="car" />

		<parameterset type="teleportedModeParameters" >
			<param name="mode" value="bike" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="4.166666666666667" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="mode" value="walk" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="mode" value="undefined" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="13.88888888888889" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="mode" value="pt" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="2.0" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
	</module>

<!-- ====================================================================== -->

	<module name="ptCounts" >

		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />

		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />

		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />

		<!-- input file containing the alighting (getting off) counts for pt -->
		<param name="inputAlightCountsFile" value="null" />

		<!-- input file containing the boarding (getting on) counts for pt -->
		<param name="inputBoardCountsFile" value="null" />

		<!-- input file containing the occupancy counts for pt -->
		<param name="inputOccupancyCountsFile" value="null" />

		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="null" />

		<!-- every how many iterations (starting with 0) counts comparisons are generated -->
		<param name="ptCountsInterval" value="10" />
	</module>

<!-- ====================================================================== -->

	<module name="qsim" >
		<param name="endTime" value="15:00:00" />
		<param name="flowCapacityFactor" value="1.0" />

		<!-- decides if waiting vehicles enter the network after or before the already driving vehicles were moved. Default: false -->
		<param name="insertingWaitingVehiclesBeforeDrivingVehicles" value="false" />

		<!-- default: FIFO; options: FIFO PassingQ -->
		<param name="linkDynamics" value="FIFO" />

		<!-- The (initial) width of the links of the network. Use positive floating point values. -->
		<param name="linkWidth" value="30.0" />

		<!-- Defines which modes are congested modes. Technically, these are the modes that the departure handler of the netsimengine handles.  Effective cell size, effective lane width, flow capacity factor, and storage capacity factor need to be set with diligence.  Need to be vehicular modes to make sense. -->
		<param name="mainMode" value="car" />

		<!-- Shortens a link in the visualization, i.e. its start and end point are moved into towards the center. Does not affect traffic flow.  -->
		<param name="nodeOffset" value="0.0" />

		<!-- Number of threads used for the QSim.  Note that this setting is independent from the "global" threads setting.  In contrast to earlier versions, the non-parallel special version is no longer there. -->
		<param name="numberOfThreads" value="1" />

		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="false" />

		<!-- `maxOfStarttimeAndEarliestActivityEnd' (default behavior) or `onlyUseStarttime' -->
		<param name="simStarttimeInterpretation" value="maxOfStarttimeAndEarliestActivityEnd" />

		<!-- snapshotStyle. One of: equiDist (vehicles equidistant on link) or queue (vehicles queued at end of link) or withHoles (experimental!!) -->
		<param name="snapshotStyle" value="equiDist" />

		<param name="snapshotperiod" value="00:00:00" />
		<param name="startTime" value="undefined" />
		<param name="storageCapacityFactor" value="1.0" />

		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="10.0" />

		<param name="trafficDynamics" value="kinematicWaves" />

	</module>

<!-- ====================================================================== -->

	<module name="strategy" >

		<!-- the external executable will be called with a config file as argument.  This is the pathname to a possible skeleton config, to which additional information will be added.  Can be null. -->
		<param name="ExternalExeConfigTemplate" value="null" />

		<!-- time out value (in seconds) after which matsim will consider the external module as failed -->
		<param name="ExternalExeTimeOut" value="3600" />

		<!-- root directory for temporary files generated by the external executable. Provided as a service; I don't think this is used by MATSim. -->
		<param name="ExternalExeTmpFileRootDir" value="null" />

		<!-- fraction of iterations where innovative strategies are switched off.  Something link 0.8 should be good.  E.g. if you run from iteration 400 to iteration 500, innovation is switched off at iteration 480 -->
		<param name="fractionOfIterationsToDisableInnovation" value="Infinity" />

		<!-- maximum number of plans per agent.  ``0'' means ``infinity''.  Currently (2010), ``5'' is a good number -->
		<param name="maxAgentPlanMemorySize" value="5" />

		<parameterset type="strategysettings" >

			<!-- iteration after which module will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...) -->
			<param name="disableAfterIteration" value="-1" />

			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />

			<!-- name of strategy (if not full class name, resolved in StrategyManagerConfigLoader) -->
			 <param name="strategyName" value="ReRoute" />
 <!--			<param name="moduleName" value="ReRoute" />  -->

			<!-- probability that a strategy is applied to a given a person.  despite its name, this really is a ``weight'' -->
			<param name="weight" value="0.2" />
<!-- 			<param name="probability" value="0.2" />  -->

			<!-- subpopulation to which the module applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />
		</parameterset>

		<parameterset type="strategysettings" >

			<!-- iteration after which module will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...) -->
			<param name="disableAfterIteration" value="-1" />

			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />

			<!-- commented since these are invalid in matsim 0.7.0-SNAPSHOT-->
			<!-- name of strategy (if not full class name, resolved in StrategyManagerConfigLoader) -->
			<param name="strategyName" value="TimeAllocationMutator" />
 <!--			<param name="moduleName" value="TimeAllocationMutator" /> -->

			<!-- probability that a strategy is applied to a given a person.  despite its name, this really is a ``weight'' -->
			<param name="weight" value="0.8" />
<!-- 			<param name="probability" value="0.8" /> -->

			<!-- subpopulation to which the module applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />
		</parameterset>
	</module>

<!-- ====================================================================== -->

	<module name="subtourModeChoice" >

		<!-- Defines the chain-based modes, seperated by commas -->
		<param name="chainBasedModes" value="car,bike" />

		<!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
		<param name="considerCarAvailability" value="false" />

		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt,bike,walk" />
	</module>

<!-- ====================================================================== -->

	<module name="transit" >

		<!-- Comma-separated list of transportation modes that are handled as transit. Defaults to 'pt'. -->
		<param name="transitModes" value="pt" />

		<!-- Input file containing the transit schedule to be simulated. -->
		<param name="transitScheduleFile" value="null" />

		<!-- Input file containing the vehicles used by the departures in the transit schedule. -->
		<param name="vehiclesFile" value="null" />
	</module>

<!-- ====================================================================== -->

	<module name="transitRouter" >

		<!-- additional time the router allocates when a line switch happens. Can be interpreted as a 'safety' time that agents need to safely transfer from one line to another -->
		<param name="additionalTransferTime" value="0.0" />

		<!-- step size to increase searchRadius if no stops are found -->
		<param name="extensionRadius" value="200.0" />

		<!-- maximum beeline distance between stops that agents could transfer to by walking -->
		<param name="maxBeelineWalkConnectionDistance" value="100.0" />

		<!-- the radius in which stop locations are searched, given a start or target coordinate -->
		<param name="searchRadius" value="1000.0" />
	</module>

<!-- ====================================================================== -->

	<module name="travelTimeCalculator" >

		<!-- Transport modes that will be respected by the travel time collector. 'car' is default, which includes also bussed from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />

		<param name="calculateLinkToLinkTravelTimes" value="false" />
		<param name="calculateLinkTravelTimes" value="true" />

		<!-- If true, link travel times from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />

		<!-- How to deal with congested time bins that have no link entry events. `optimistic' assumes free speed (too optimistic); 'experimental_LastMile' is experimental and probably too pessimistic. -->
		<param name="travelTimeAggregator" value="optimistic" />

		<!-- The size of the time bin (in sec) into which the link travel times are aggregated for the router -->
		<param name="travelTimeBinSize" value="900" />

		<!-- possible values: nullTravelTimeCalculatorArray TravelTimeCalculatorHashMap  -->
		<param name="travelTimeCalculator" value="TravelTimeCalculatorArray" />

		<!-- How to deal with link entry times at different positions during the time bin. Currently supported: average, linearinterpolation -->
		<param name="travelTimeGetter" value="average" />
	</module>

<!-- ====================================================================== -->

	<module name="vspExperimental" >

		<!-- commented since these are invalid in matsim 0.7.0-SNAPSHOT-->
 		<!-- (do not use) set chainBasedModes for subTourModeChoice by Yu. E.g. "car,bike", "car"
 		<param name="chainBasedModes" value="car" /> -->

 		<!-- fraction of iterations at which MSA score averaging is started. The matsim theory department suggests to use this together with switching off choice set innovation (where a similar switch exists), but it has not been tested yet.
 		<param name="fractionOfIterationsToStartScoreMSA" value="null" /> -->

		<!-- changes MATSim's global time format used in output files. Can be used to enforce writing fractional seconds e.g. in output_plans.  default is `hh:mm:ss' (because of backwards compatibility). see Time.java for possible formats
 		<param name="matsimGlobalTimeformat" value="HH:mm:ss" /> -->

 		<!-- (do not use) set the traffic mode option for subTourModeChoice by Yu
 		<param name="modes" value="car, pt" /> -->

 		<!-- (not tested) will remove plan attributes that are presumably not used, such as activityStartTime. default=false
 		<param name="removingUnnecessaryPlanAttributes" value="false" /> -->

 		<!-- (deprecated, use fractionOfIterationsToStartScoreMSA) first iteration of MSA score averaging. The matsim theory department suggests to use this together with switching of choice set innovation, but it has not been tested yet.
		<param name="scoreMSAStartsAtIteration" value="null" /> -->


		<!-- (do not use except of you have to) There was a problem with pt interaction scoring.  Some people solved it by overwriting the parameters of the pt interaction activity type.  Doing this now throws an Exception.  If you still insist on doing this, set the following to true. -->
		<param name="isAbleToOverwritePtInteractionParams" value="false" />

		<param name="isGeneratingBoardingDeniedEvent" value="false" />

		<param name="logitScaleParamForPlansRemoval" value="1.0" />

		<!-- Options: `ignore', `warn', `abort'.  Default: either `ignore' or `warn'.
		When violating VSP defaults, this results in nothing, warnings, or aborts.  Members of VSP should use `abort' or talk to kai. -->
		<param name="vspDefaultsCheckingLevel" value="ignore" />

		<!-- if true then writes output_events in output directory.  default is `false'. Will only work when lastIteration is multiple of events writing interval -->
		<param name="writingOutputEvents" value="true" />
	</module>

<!-- ====================================================================== -->

</config>
