2018-02-12 16:07:16,209  INFO Gbl:57 JVM: 1.8.0_131; Oracle Corporation; mixed mode; 64-bit
2018-02-12 16:07:16,209  INFO Gbl:61 OS: Mac OS X; 10.12.6; x86_64
2018-02-12 16:07:16,209  INFO Gbl:64 CPU cores: 8
2018-02-12 16:07:16,209  INFO Gbl:65 max. Memory: 3641.0MB (3817865216B)
2018-02-12 16:07:16,210  INFO Gbl:103 MATSim-Build: r59e79dced8a4d7e23fba76de07e1bcf0f0835648 (2018-02-06 16:04:01)
2018-02-12 16:07:16,210  INFO AbstractController:58 Used Controler-Class: org.matsim.core.controler.NewControler
2018-02-12 16:07:16,210  INFO Config:536 ConfigConsistencyChecker with runtime type=class org.matsim.core.config.consistency.ConfigConsistencyCheckerImpl was already added; not adding it a second time
2018-02-12 16:07:16,211  INFO Injector:83 org.matsim.api.core.v01.Scenario 
2018-02-12 16:07:16,211  INFO Injector:84   --> provider: of(org.matsim.core.scenario.MutableScenario@4aa11206)
2018-02-12 16:07:16,211  INFO Injector:85   --> source: org.matsim.core.scenario.ScenarioByInstanceModule.install(ScenarioByInstanceModule.java:31)
2018-02-12 16:07:16,211  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:16,211  INFO Injector:91 
2018-02-12 16:07:16,211  INFO Injector:83 org.matsim.api.core.v01.network.Network 
2018-02-12 16:07:16,212  INFO Injector:84   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(ScenarioByInstanceModule.java:39)
2018-02-12 16:07:16,212  INFO Injector:85   --> source: org.matsim.api.core.v01.network.Network org.matsim.core.scenario.ScenarioByInstanceModule.provideNetwork(org.matsim.api.core.v01.Scenario)
2018-02-12 16:07:16,212  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,212  INFO Injector:91 
2018-02-12 16:07:16,212  INFO Injector:83 org.matsim.api.core.v01.population.Population 
2018-02-12 16:07:16,212  INFO Injector:84   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(ScenarioByInstanceModule.java:43)
2018-02-12 16:07:16,212  INFO Injector:85   --> source: org.matsim.api.core.v01.population.Population org.matsim.core.scenario.ScenarioByInstanceModule.providePopulation(org.matsim.api.core.v01.Scenario)
2018-02-12 16:07:16,212  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,212  INFO Injector:91 
2018-02-12 16:07:16,213  INFO Injector:83 org.matsim.api.core.v01.population.PopulationFactory 
2018-02-12 16:07:16,213  INFO Injector:84   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(ScenarioByInstanceModule.java:47)
2018-02-12 16:07:16,213  INFO Injector:85   --> source: org.matsim.api.core.v01.population.PopulationFactory org.matsim.core.scenario.ScenarioByInstanceModule.providePopulationFactory(org.matsim.api.core.v01.population.Population)
2018-02-12 16:07:16,213  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,213  INFO Injector:91 
2018-02-12 16:07:16,213  INFO Injector:83 org.matsim.facilities.ActivityFacilities 
2018-02-12 16:07:16,213  INFO Injector:84   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(ScenarioByInstanceModule.java:51)
2018-02-12 16:07:16,213  INFO Injector:85   --> source: org.matsim.facilities.ActivityFacilities org.matsim.core.scenario.ScenarioByInstanceModule.provideActivityFacilities(org.matsim.api.core.v01.Scenario)
2018-02-12 16:07:16,213  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,213  INFO Injector:91 
2018-02-12 16:07:16,214  INFO Injector:83 org.matsim.households.Households 
2018-02-12 16:07:16,214  INFO Injector:84   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(ScenarioByInstanceModule.java:56)
2018-02-12 16:07:16,214  INFO Injector:85   --> source: org.matsim.households.Households org.matsim.core.scenario.ScenarioByInstanceModule.provideHouseholds(org.matsim.api.core.v01.Scenario)
2018-02-12 16:07:16,214  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,214  INFO Injector:91 
2018-02-12 16:07:16,214  INFO Injector:83 org.matsim.vehicles.Vehicles 
2018-02-12 16:07:16,214  INFO Injector:84   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(ScenarioByInstanceModule.java:61)
2018-02-12 16:07:16,215  INFO Injector:85   --> source: org.matsim.vehicles.Vehicles org.matsim.core.scenario.ScenarioByInstanceModule.provideVehicles(org.matsim.api.core.v01.Scenario)
2018-02-12 16:07:16,215  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,215  INFO Injector:91 
2018-02-12 16:07:16,215  INFO Injector:83 org.matsim.lanes.data.Lanes 
2018-02-12 16:07:16,215  INFO Injector:84   --> provider: @Provides org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(ScenarioByInstanceModule.java:66)
2018-02-12 16:07:16,215  INFO Injector:85   --> source: org.matsim.lanes.data.Lanes org.matsim.core.scenario.ScenarioByInstanceModule.provideLanes(org.matsim.api.core.v01.Scenario)
2018-02-12 16:07:16,215  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,215  INFO Injector:91 
2018-02-12 16:07:16,215  INFO Injector:83 org.matsim.core.controler.ControlerI 
2018-02-12 16:07:16,216  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.ControlerI, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@76130a29}[Scopes.SINGLETON]
2018-02-12 16:07:16,216  INFO Injector:85   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:8)
2018-02-12 16:07:16,216  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:16,216  INFO Injector:91 
2018-02-12 16:07:16,216  INFO Injector:83 org.matsim.core.controler.ControlerListenerManager 
2018-02-12 16:07:16,217  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.ControlerListenerManager, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@5d342959[Scopes.SINGLETON]}
2018-02-12 16:07:16,217  INFO Injector:85   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:10)
2018-02-12 16:07:16,217  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,217  INFO Injector:91 
2018-02-12 16:07:16,217  INFO Injector:83 org.matsim.core.controler.PrepareForSim 
2018-02-12 16:07:16,217  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.PrepareForSim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2721044}
2018-02-12 16:07:16,217  INFO Injector:85   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:11)
2018-02-12 16:07:16,218  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,218  INFO Injector:91 
2018-02-12 16:07:16,218  INFO Injector:83 org.matsim.core.controler.TerminationCriterion 
2018-02-12 16:07:16,218  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.TerminationCriterion, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@61514735}
2018-02-12 16:07:16,218  INFO Injector:85   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:14)
2018-02-12 16:07:16,218  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,218  INFO Injector:91 
2018-02-12 16:07:16,218  INFO Injector:83 org.matsim.core.controler.MatsimServices 
2018-02-12 16:07:16,218  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.MatsimServices, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2e86807a}
2018-02-12 16:07:16,218  INFO Injector:85   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:15)
2018-02-12 16:07:16,218  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,219  INFO Injector:91 
2018-02-12 16:07:16,219  INFO Injector:83 org.matsim.core.controler.corelisteners.PlansScoring 
2018-02-12 16:07:16,219  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.PlansScoring, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@188598ad[Scopes.SINGLETON]}
2018-02-12 16:07:16,219  INFO Injector:85   --> source: org.matsim.core.scoring.PlansScoringModule.install(PlansScoringModule.java:11)
2018-02-12 16:07:16,219  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,219  INFO Injector:91 
2018-02-12 16:07:16,219  INFO Injector:83 org.matsim.core.controler.corelisteners.PlansReplanning 
2018-02-12 16:07:16,220  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.PlansReplanning, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2b7e8044[Scopes.SINGLETON]}
2018-02-12 16:07:16,220  INFO Injector:85   --> source: org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:38)
2018-02-12 16:07:16,220  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,220  INFO Injector:91 
2018-02-12 16:07:16,220  INFO Injector:83 org.matsim.core.controler.corelisteners.PlansDumping 
2018-02-12 16:07:16,220  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.PlansDumping, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@5befbac1[Scopes.SINGLETON]}
2018-02-12 16:07:16,220  INFO Injector:85   --> source: org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:39)
2018-02-12 16:07:16,221  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,221  INFO Injector:91 
2018-02-12 16:07:16,221  INFO Injector:83 org.matsim.core.controler.corelisteners.EventsHandling 
2018-02-12 16:07:16,221  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.EventsHandling, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@6bfaa0a6[Scopes.SINGLETON]}
2018-02-12 16:07:16,221  INFO Injector:85   --> source: org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:40)
2018-02-12 16:07:16,221  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,221  INFO Injector:91 
2018-02-12 16:07:16,221  INFO Injector:83 org.matsim.core.controler.corelisteners.DumpDataAtEnd 
2018-02-12 16:07:16,221  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.corelisteners.DumpDataAtEnd, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@5de5e95[Scopes.SINGLETON]}
2018-02-12 16:07:16,221  INFO Injector:85   --> source: org.matsim.core.controler.corelisteners.ControlerDefaultCoreListenersModule.install(ControlerDefaultCoreListenersModule.java:41)
2018-02-12 16:07:16,221  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,222  INFO Injector:91 
2018-02-12 16:07:16,222  INFO Injector:83 org.matsim.core.api.experimental.events.EventsManager 
2018-02-12 16:07:16,222  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.api.experimental.events.EventsManager, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@7c2924d7}[Scopes.SINGLETON]
2018-02-12 16:07:16,222  INFO Injector:85   --> source: org.matsim.core.events.EventsManagerModule.install(EventsManagerModule.java:23)
2018-02-12 16:07:16,222  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:16,222  INFO Injector:91 
2018-02-12 16:07:16,222  INFO Injector:83 org.matsim.core.mobsim.framework.Mobsim 
2018-02-12 16:07:16,222  INFO Injector:84   --> provider: Key[type=org.matsim.core.mobsim.qsim.QSimProvider, annotation=[none]]
2018-02-12 16:07:16,222  INFO Injector:85   --> source: org.matsim.core.mobsim.qsim.QSimModule.configure(QSimModule.java:28)
2018-02-12 16:07:16,222  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,223  INFO Injector:91 
2018-02-12 16:07:16,223  INFO Injector:83 org.matsim.core.mobsim.qsim.qnetsimengine.QNetworkFactory 
2018-02-12 16:07:16,223  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetworkFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@3eb3232b}
2018-02-12 16:07:16,223  INFO Injector:85   --> source: org.matsim.core.mobsim.qsim.QSimModule.configure(QSimModule.java:32)
2018-02-12 16:07:16,223  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,223  INFO Injector:91 
2018-02-12 16:07:16,223  INFO Injector:83 org.matsim.core.router.util.TravelTime @com.google.inject.name.Named(value=car)
2018-02-12 16:07:16,223  INFO Injector:84   --> provider: Key[type=org.matsim.core.trafficmonitoring.ObservedLinkTravelTimes, annotation=[none]]
2018-02-12 16:07:16,223  INFO Injector:85   --> source: org.matsim.core.trafficmonitoring.TravelTimeCalculatorModule.install(TravelTimeCalculatorModule.java:81)
2018-02-12 16:07:16,224  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,224  INFO Injector:91 
2018-02-12 16:07:16,224  INFO Injector:83 org.matsim.core.router.costcalculators.TravelDisutilityFactory @com.google.inject.name.Named(value=car)
2018-02-12 16:07:16,224  INFO Injector:84   --> provider: of(org.matsim.core.router.costcalculators.RandomizingTimeDistanceTravelDisutilityFactory@34c70b5e)
2018-02-12 16:07:16,224  INFO Injector:85   --> source: org.matsim.core.router.costcalculators.TravelDisutilityModule.install(TravelDisutilityModule.java:34)
2018-02-12 16:07:16,224  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:16,224  INFO Injector:91 
2018-02-12 16:07:16,224  INFO Injector:83 org.matsim.core.scoring.ScoringFunctionFactory 
2018-02-12 16:07:16,224  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.scoring.ScoringFunctionFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@10947c4e}
2018-02-12 16:07:16,224  INFO Injector:85   --> source: org.matsim.core.scoring.functions.CharyparNagelScoringFunctionModule.install(CharyparNagelScoringFunctionModule.java:32)
2018-02-12 16:07:16,224  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,225  INFO Injector:91 
2018-02-12 16:07:16,225  INFO Injector:83 org.matsim.core.scoring.functions.ScoringParametersForPerson 
2018-02-12 16:07:16,225  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.scoring.functions.ScoringParametersForPerson, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2b0e9f30}
2018-02-12 16:07:16,225  INFO Injector:85   --> source: org.matsim.core.scoring.functions.CharyparNagelScoringFunctionModule.install(CharyparNagelScoringFunctionModule.java:33)
2018-02-12 16:07:16,225  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,225  INFO Injector:91 
2018-02-12 16:07:16,225  INFO Injector:83 org.matsim.core.scoring.ExperiencedPlansService 
2018-02-12 16:07:16,226  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.scoring.ExperiencedPlansService, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@6824b913}[Scopes.SINGLETON]
2018-02-12 16:07:16,226  INFO Injector:85   --> source: org.matsim.core.scoring.ExperiencedPlansModule.install(ExperiencedPlansModule.java:10)
2018-02-12 16:07:16,226  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:16,226  INFO Injector:91 
2018-02-12 16:07:16,226  INFO Injector:83 org.matsim.core.router.MainModeIdentifier 
2018-02-12 16:07:16,226  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.MainModeIdentifier, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@9e54c59}
2018-02-12 16:07:16,226  INFO Injector:85   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:44)
2018-02-12 16:07:16,226  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,226  INFO Injector:91 
2018-02-12 16:07:16,226  INFO Injector:83 org.matsim.core.router.util.LeastCostPathCalculatorFactory 
2018-02-12 16:07:16,227  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.util.LeastCostPathCalculatorFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@4a8a0099[Scopes.SINGLETON]}
2018-02-12 16:07:16,227  INFO Injector:85   --> source: org.matsim.core.router.LeastCostPathCalculatorModule.install(LeastCostPathCalculatorModule.java:40)
2018-02-12 16:07:16,227  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,227  INFO Injector:91 
2018-02-12 16:07:16,227  INFO Injector:83 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=ride)
2018-02-12 16:07:16,227  INFO Injector:84   --> provider: org.matsim.core.router.FreespeedFactorRouting@33feb805
2018-02-12 16:07:16,227  INFO Injector:85   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:55)
2018-02-12 16:07:16,228  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,228  INFO Injector:91 
2018-02-12 16:07:16,228  INFO Injector:83 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=pt)
2018-02-12 16:07:16,228  INFO Injector:84   --> provider: org.matsim.core.router.FreespeedFactorRouting@37854b34
2018-02-12 16:07:16,228  INFO Injector:85   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:55)
2018-02-12 16:07:16,228  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,228  INFO Injector:91 
2018-02-12 16:07:16,229  INFO Injector:83 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=bike)
2018-02-12 16:07:16,229  INFO Injector:84   --> provider: org.matsim.core.router.BeelineTeleportationRouting@48eb001a
2018-02-12 16:07:16,229  INFO Injector:85   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58)
2018-02-12 16:07:16,229  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,229  INFO Injector:91 
2018-02-12 16:07:16,229  INFO Injector:83 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=walk)
2018-02-12 16:07:16,229  INFO Injector:84   --> provider: org.matsim.core.router.BeelineTeleportationRouting@34332b8d
2018-02-12 16:07:16,230  INFO Injector:85   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58)
2018-02-12 16:07:16,230  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,230  INFO Injector:91 
2018-02-12 16:07:16,230  INFO Injector:83 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=access_walk)
2018-02-12 16:07:16,230  INFO Injector:84   --> provider: org.matsim.core.router.BeelineTeleportationRouting@724b939e
2018-02-12 16:07:16,230  INFO Injector:85   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58)
2018-02-12 16:07:16,230  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,231  INFO Injector:91 
2018-02-12 16:07:16,231  INFO Injector:83 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=egress_walk)
2018-02-12 16:07:16,231  INFO Injector:84   --> provider: org.matsim.core.router.BeelineTeleportationRouting@6f8aba08
2018-02-12 16:07:16,231  INFO Injector:85   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58)
2018-02-12 16:07:16,231  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,231  INFO Injector:91 
2018-02-12 16:07:16,231  INFO Injector:83 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=undefined)
2018-02-12 16:07:16,231  INFO Injector:84   --> provider: org.matsim.core.router.BeelineTeleportationRouting@7ff19c33
2018-02-12 16:07:16,232  INFO Injector:85   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:58)
2018-02-12 16:07:16,232  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,232  INFO Injector:91 
2018-02-12 16:07:16,232  INFO Injector:83 org.matsim.core.router.RoutingModule @com.google.inject.name.Named(value=car)
2018-02-12 16:07:16,232  INFO Injector:84   --> provider: org.matsim.core.router.NetworkRoutingProvider@52b3bf03
2018-02-12 16:07:16,232  INFO Injector:85   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:66)
2018-02-12 16:07:16,232  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,232  INFO Injector:91 
2018-02-12 16:07:16,233  INFO Injector:83 org.matsim.core.replanning.selectors.PlanSelector<org.matsim.api.core.v01.population.Plan, org.matsim.api.core.v01.population.Person> 
2018-02-12 16:07:16,233  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.replanning.selectors.PlanSelector<org.matsim.api.core.v01.population.Plan, org.matsim.api.core.v01.population.Person>, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@1d901f20}
2018-02-12 16:07:16,233  INFO Injector:85   --> source: org.matsim.core.replanning.strategies.DefaultPlanStrategiesModule.install(DefaultPlanStrategiesModule.java:49)
2018-02-12 16:07:16,233  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,233  INFO Injector:91 
2018-02-12 16:07:16,233  INFO Injector:83 org.matsim.core.replanning.ReplanningContext 
2018-02-12 16:07:16,233  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.replanning.ReplanningContext, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@12b5736c[Scopes.SINGLETON]}[Scopes.SINGLETON]
2018-02-12 16:07:16,234  INFO Injector:85   --> source: org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:48)
2018-02-12 16:07:16,234  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:16,234  INFO Injector:91 
2018-02-12 16:07:16,234  INFO Injector:83 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=85, type=MULTIBINDER, keyType=)
2018-02-12 16:07:16,234  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=85, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@7316523a[Scopes.SINGLETON]}
2018-02-12 16:07:16,234  INFO Injector:85   --> source: org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:47)
2018-02-12 16:07:16,234  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,234  INFO Injector:91 
2018-02-12 16:07:16,235  INFO Injector:83 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=86, type=MULTIBINDER, keyType=)
2018-02-12 16:07:16,235  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=86, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@7668892a}
2018-02-12 16:07:16,235  INFO Injector:85   --> source: org.matsim.analysis.LegHistogramModule.install(LegHistogramModule.java:31)
2018-02-12 16:07:16,235  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,235  INFO Injector:91 
2018-02-12 16:07:16,235  INFO Injector:83 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=87, type=MULTIBINDER, keyType=)
2018-02-12 16:07:16,235  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=87, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@609e57da}
2018-02-12 16:07:16,235  INFO Injector:85   --> source: org.matsim.analysis.LegTimesModule.install(LegTimesModule.java:32)
2018-02-12 16:07:16,235  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,235  INFO Injector:91 
2018-02-12 16:07:16,235  INFO Injector:83 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=88, type=MULTIBINDER, keyType=)
2018-02-12 16:07:16,235  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=88, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@75b6dd5b}
2018-02-12 16:07:16,236  INFO Injector:85   --> source: org.matsim.analysis.TravelDistanceStatsModule.install(TravelDistanceStatsModule.java:11)
2018-02-12 16:07:16,236  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,236  INFO Injector:91 
2018-02-12 16:07:16,236  INFO Injector:83 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=89, type=MULTIBINDER, keyType=)
2018-02-12 16:07:16,236  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=89, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@611640f0[Scopes.SINGLETON]}
2018-02-12 16:07:16,236  INFO Injector:85   --> source: org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:32)
2018-02-12 16:07:16,236  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,236  INFO Injector:91 
2018-02-12 16:07:16,237  INFO Injector:83 org.matsim.analysis.ScoreStats 
2018-02-12 16:07:16,237  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.analysis.ScoreStats, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@611640f0[Scopes.SINGLETON]}
2018-02-12 16:07:16,237  INFO Injector:85   --> source: org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:33)
2018-02-12 16:07:16,237  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,237  INFO Injector:91 
2018-02-12 16:07:16,237  INFO Injector:83 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=90, type=MULTIBINDER, keyType=)
2018-02-12 16:07:16,237  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=90, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@4ace284d[Scopes.SINGLETON]}
2018-02-12 16:07:16,237  INFO Injector:85   --> source: org.matsim.analysis.ModeStatsModule.install(ModeStatsModule.java:32)
2018-02-12 16:07:16,237  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,237  INFO Injector:91 
2018-02-12 16:07:16,238  INFO Injector:83 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=91, type=MULTIBINDER, keyType=)
2018-02-12 16:07:16,238  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=91, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@2b1cd7bc}
2018-02-12 16:07:16,238  INFO Injector:85   --> source: org.matsim.counts.CountsModule.install(CountsModule.java:42)
2018-02-12 16:07:16,238  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,238  INFO Injector:91 
2018-02-12 16:07:16,238  INFO Injector:83 org.matsim.counts.Counts<org.matsim.api.core.v01.network.Link> 
2018-02-12 16:07:16,238  INFO Injector:84   --> provider: @Provides org.matsim.counts.CountsModule.provideLinkCounts(CountsModule.java:63)[Scopes.SINGLETON]
2018-02-12 16:07:16,238  INFO Injector:85   --> source: org.matsim.counts.Counts org.matsim.counts.CountsModule.provideLinkCounts(org.matsim.api.core.v01.Scenario,org.matsim.core.config.groups.CountsConfigGroup)
2018-02-12 16:07:16,238  INFO Injector:87   --> scope: Scopes.SINGLETON
2018-02-12 16:07:16,238  INFO Injector:91 
2018-02-12 16:07:16,238  INFO Injector:83 org.matsim.core.controler.listener.ControlerListener @com.google.inject.multibindings.Element(setName=,uniqueId=92, type=MULTIBINDER, keyType=)
2018-02-12 16:07:16,238  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.controler.listener.ControlerListener, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=92, type=MULTIBINDER, keyType=)], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@16aed49f}
2018-02-12 16:07:16,239  INFO Injector:85   --> source: org.matsim.core.population.VspPlansCleanerModule.install(VspPlansCleanerModule.java:34)
2018-02-12 16:07:16,239  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,239  INFO Injector:91 
2018-02-12 16:07:16,239  INFO Injector:83 org.matsim.core.mobsim.framework.listeners.MobsimListener @com.google.inject.multibindings.Element(setName=,uniqueId=93, type=MULTIBINDER, keyType=)
2018-02-12 16:07:16,239  INFO Injector:84   --> provider: Key[type=org.matsim.vis.snapshotwriters.SnapshotWritersModule$SnapshotWriterManagerProvider, annotation=[none]]
2018-02-12 16:07:16,239  INFO Injector:85   --> source: org.matsim.vis.snapshotwriters.SnapshotWritersModule.install(SnapshotWritersModule.java:45)
2018-02-12 16:07:16,239  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,239  INFO Injector:91 
2018-02-12 16:07:16,239  INFO Injector:83 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=94, type=MAPBINDER, keyType=java.lang.String)
2018-02-12 16:07:16,239  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=94, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@6f8aba08}
2018-02-12 16:07:16,239  INFO Injector:85   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:123)
2018-02-12 16:07:16,239  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,239  INFO Injector:91 
2018-02-12 16:07:16,240  INFO Injector:83 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=96, type=MAPBINDER, keyType=java.lang.String)
2018-02-12 16:07:16,240  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=96, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.FreespeedFactorRouting@37854b34}
2018-02-12 16:07:16,240  INFO Injector:85   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:123)
2018-02-12 16:07:16,240  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,240  INFO Injector:91 
2018-02-12 16:07:16,240  INFO Injector:83 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=98, type=MAPBINDER, keyType=java.lang.String)
2018-02-12 16:07:16,240  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=98, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.NetworkRoutingProvider@52b3bf03}
2018-02-12 16:07:16,240  INFO Injector:85   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:123)
2018-02-12 16:07:16,240  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,241  INFO Injector:91 
2018-02-12 16:07:16,241  INFO Injector:83 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=100, type=MAPBINDER, keyType=java.lang.String)
2018-02-12 16:07:16,241  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=100, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@724b939e}
2018-02-12 16:07:16,241  INFO Injector:85   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:123)
2018-02-12 16:07:16,241  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,241  INFO Injector:91 
2018-02-12 16:07:16,241  INFO Injector:83 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=102, type=MAPBINDER, keyType=java.lang.String)
2018-02-12 16:07:16,241  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=102, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.FreespeedFactorRouting@33feb805}
2018-02-12 16:07:16,241  INFO Injector:85   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:123)
2018-02-12 16:07:16,241  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,241  INFO Injector:91 
2018-02-12 16:07:16,242  INFO Injector:83 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=104, type=MAPBINDER, keyType=java.lang.String)
2018-02-12 16:07:16,242  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=104, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@34332b8d}
2018-02-12 16:07:16,242  INFO Injector:85   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:123)
2018-02-12 16:07:16,242  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,242  INFO Injector:91 
2018-02-12 16:07:16,242  INFO Injector:83 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=106, type=MAPBINDER, keyType=java.lang.String)
2018-02-12 16:07:16,242  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=106, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@48eb001a}
2018-02-12 16:07:16,242  INFO Injector:85   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:123)
2018-02-12 16:07:16,242  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,242  INFO Injector:91 
2018-02-12 16:07:16,242  INFO Injector:83 org.matsim.core.router.RoutingModule @com.google.inject.multibindings.Element(setName=,uniqueId=108, type=MAPBINDER, keyType=java.lang.String)
2018-02-12 16:07:16,242  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.RoutingModule, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=108, type=MAPBINDER, keyType=java.lang.String)], provider=org.matsim.core.router.BeelineTeleportationRouting@7ff19c33}
2018-02-12 16:07:16,243  INFO Injector:85   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:123)
2018-02-12 16:07:16,243  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,243  INFO Injector:91 
2018-02-12 16:07:16,243  INFO Injector:83 org.matsim.core.router.util.TravelTime @com.google.inject.multibindings.Element(setName=,uniqueId=110, type=MAPBINDER, keyType=java.lang.String)
2018-02-12 16:07:16,243  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.util.TravelTime, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=110, type=MAPBINDER, keyType=java.lang.String)], provider=Key[type=org.matsim.core.trafficmonitoring.ObservedLinkTravelTimes, annotation=[none]]}
2018-02-12 16:07:16,243  INFO Injector:85   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:123)
2018-02-12 16:07:16,243  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,243  INFO Injector:91 
2018-02-12 16:07:16,243  INFO Injector:83 org.matsim.core.router.costcalculators.TravelDisutilityFactory @com.google.inject.multibindings.Element(setName=,uniqueId=112, type=MAPBINDER, keyType=java.lang.String)
2018-02-12 16:07:16,244  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.router.costcalculators.TravelDisutilityFactory, annotation=@com.google.inject.multibindings.Element(setName=,uniqueId=112, type=MAPBINDER, keyType=java.lang.String)], provider=ConstantFactory{value=org.matsim.core.router.costcalculators.RandomizingTimeDistanceTravelDisutilityFactory@34c70b5e}[Scopes.SINGLETON]}
2018-02-12 16:07:16,244  INFO Injector:85   --> source: org.matsim.core.controler.Injector$3.configure(Injector.java:123)
2018-02-12 16:07:16,244  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,244  INFO Injector:91 
2018-02-12 16:07:16,244  INFO Injector:83 org.matsim.core.controler.ControlerListenerManagerImpl 
2018-02-12 16:07:16,244  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5d342959[Scopes.SINGLETON]
2018-02-12 16:07:16,244  INFO Injector:85   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:9)
2018-02-12 16:07:16,245  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:16,245  INFO Injector:91 
2018-02-12 16:07:16,245  INFO Injector:83 org.matsim.analysis.IterationStopWatch 
2018-02-12 16:07:16,245  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@3234474[Scopes.SINGLETON]
2018-02-12 16:07:16,245  INFO Injector:85   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:12)
2018-02-12 16:07:16,245  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:16,245  INFO Injector:91 
2018-02-12 16:07:16,245  INFO Injector:83 org.matsim.core.controler.OutputDirectoryHierarchy 
2018-02-12 16:07:16,246  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@17e9bc9e[Scopes.SINGLETON]
2018-02-12 16:07:16,246  INFO Injector:85   --> source: org.matsim.core.controler.NewControlerModule.install(NewControlerModule.java:13)
2018-02-12 16:07:16,246  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:16,246  INFO Injector:91 
2018-02-12 16:07:16,246  INFO Injector:83 org.matsim.core.scoring.ScoringFunctionsForPopulation 
2018-02-12 16:07:16,246  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4ceff87d[Scopes.SINGLETON]
2018-02-12 16:07:16,246  INFO Injector:85   --> source: org.matsim.core.scoring.PlansScoringModule.install(PlansScoringModule.java:10)
2018-02-12 16:07:16,246  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:16,246  INFO Injector:91 
2018-02-12 16:07:16,246  INFO Injector:83 org.matsim.core.events.EventsManagerModule$EventHandlerRegistrator 
2018-02-12 16:07:16,247  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@22c53d82[Scopes.SINGLETON]
2018-02-12 16:07:16,247  INFO Injector:85   --> source: org.matsim.core.events.EventsManagerModule.install(EventsManagerModule.java:25)
2018-02-12 16:07:16,247  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:16,247  INFO Injector:91 
2018-02-12 16:07:16,247  INFO Injector:83 org.matsim.core.trafficmonitoring.TravelTimeCalculator 
2018-02-12 16:07:16,247  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@6680f714[Scopes.SINGLETON]
2018-02-12 16:07:16,247  INFO Injector:85   --> source: org.matsim.core.trafficmonitoring.TravelTimeCalculatorModule.install(TravelTimeCalculatorModule.java:76)
2018-02-12 16:07:16,247  INFO Injector:87   --> scope: Scopes.SINGLETON
2018-02-12 16:07:16,247  INFO Injector:91 
2018-02-12 16:07:16,247  INFO Injector:83 org.matsim.core.scoring.EventsToActivities 
2018-02-12 16:07:16,247  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@276cc8dc[Scopes.SINGLETON]
2018-02-12 16:07:16,247  INFO Injector:85   --> source: org.matsim.core.scoring.ExperiencedPlanElementsModule.install(ExperiencedPlanElementsModule.java:12)
2018-02-12 16:07:16,248  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:16,248  INFO Injector:91 
2018-02-12 16:07:16,248  INFO Injector:83 org.matsim.core.scoring.EventsToLegs 
2018-02-12 16:07:16,248  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5e99b9c[Scopes.SINGLETON]
2018-02-12 16:07:16,248  INFO Injector:85   --> source: org.matsim.core.scoring.ExperiencedPlanElementsModule.install(ExperiencedPlanElementsModule.java:13)
2018-02-12 16:07:16,248  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:16,248  INFO Injector:91 
2018-02-12 16:07:16,248  INFO Injector:83 org.matsim.core.router.TripRouter 
2018-02-12 16:07:16,248  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@73aeef7d
2018-02-12 16:07:16,248  INFO Injector:85   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:43)
2018-02-12 16:07:16,248  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,248  INFO Injector:91 
2018-02-12 16:07:16,248  INFO Injector:83 org.matsim.core.router.SingleModeNetworksCache 
2018-02-12 16:07:16,249  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@58b5a2f3[Scopes.SINGLETON]
2018-02-12 16:07:16,249  INFO Injector:85   --> source: org.matsim.core.router.TripRouterModule.install(TripRouterModule.java:47)
2018-02-12 16:07:16,249  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:16,249  INFO Injector:91 
2018-02-12 16:07:16,249  INFO Injector:83 org.matsim.core.replanning.StrategyManager 
2018-02-12 16:07:16,249  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@58fbd02e[Scopes.SINGLETON]
2018-02-12 16:07:16,249  INFO Injector:85   --> source: org.matsim.core.replanning.StrategyManagerModule.install(StrategyManagerModule.java:47)
2018-02-12 16:07:16,249  INFO Injector:87   --> scope: Scopes.SINGLETON
2018-02-12 16:07:16,249  INFO Injector:91 
2018-02-12 16:07:16,249  INFO Injector:83 org.matsim.analysis.CalcLinkStats 
2018-02-12 16:07:16,249  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1e1eeedd[Scopes.SINGLETON]
2018-02-12 16:07:16,249  INFO Injector:85   --> source: org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:37)
2018-02-12 16:07:16,249  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:16,249  INFO Injector:91 
2018-02-12 16:07:16,250  INFO Injector:83 org.matsim.analysis.LinkStatsControlerListener 
2018-02-12 16:07:16,250  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@7316523a[Scopes.SINGLETON]
2018-02-12 16:07:16,250  INFO Injector:85   --> source: org.matsim.analysis.LinkStatsModule.install(LinkStatsModule.java:46)
2018-02-12 16:07:16,250  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:16,250  INFO Injector:91 
2018-02-12 16:07:16,250  INFO Injector:83 org.matsim.analysis.VolumesAnalyzer 
2018-02-12 16:07:16,250  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@6fff46bf[Scopes.SINGLETON]
2018-02-12 16:07:16,250  INFO Injector:85   --> source: org.matsim.analysis.VolumesAnalyzerModule.install(VolumesAnalyzerModule.java:31)
2018-02-12 16:07:16,250  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:16,250  INFO Injector:91 
2018-02-12 16:07:16,250  INFO Injector:83 org.matsim.analysis.LegHistogram 
2018-02-12 16:07:16,250  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@2db1b657
2018-02-12 16:07:16,250  INFO Injector:85   --> source: org.matsim.analysis.LegHistogramModule.install(LegHistogramModule.java:30)
2018-02-12 16:07:16,251  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:16,251  INFO Injector:91 
2018-02-12 16:07:16,251  INFO Injector:83 org.matsim.analysis.CalcLegTimes 
2018-02-12 16:07:16,251  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@58658f63[Scopes.SINGLETON]
2018-02-12 16:07:16,251  INFO Injector:85   --> source: org.matsim.analysis.LegTimesModule.install(LegTimesModule.java:31)
2018-02-12 16:07:16,251  INFO Injector:87   --> scope: Scopes.SINGLETON
2018-02-12 16:07:16,251  INFO Injector:91 
2018-02-12 16:07:16,251  INFO Injector:83 org.matsim.analysis.TravelDistanceStats 
2018-02-12 16:07:16,251  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4c6b4ed7[Scopes.SINGLETON]
2018-02-12 16:07:16,251  INFO Injector:85   --> source: org.matsim.analysis.TravelDistanceStatsModule.install(TravelDistanceStatsModule.java:10)
2018-02-12 16:07:16,251  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:16,251  INFO Injector:91 
2018-02-12 16:07:16,251  INFO Injector:83 org.matsim.analysis.ScoreStatsControlerListener 
2018-02-12 16:07:16,251  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@611640f0[Scopes.SINGLETON]
2018-02-12 16:07:16,252  INFO Injector:85   --> source: org.matsim.analysis.ScoreStatsModule.install(ScoreStatsModule.java:31)
2018-02-12 16:07:16,252  INFO Injector:87   --> scope: Scopes.SINGLETON
2018-02-12 16:07:16,252  INFO Injector:91 
2018-02-12 16:07:16,252  INFO Injector:83 org.matsim.analysis.ModeStatsControlerListener 
2018-02-12 16:07:16,252  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@4ace284d[Scopes.SINGLETON]
2018-02-12 16:07:16,252  INFO Injector:85   --> source: org.matsim.analysis.ModeStatsModule.install(ModeStatsModule.java:31)
2018-02-12 16:07:16,252  INFO Injector:87   --> scope: Scopes.SINGLETON
2018-02-12 16:07:16,252  INFO Injector:91 
2018-02-12 16:07:16,252  INFO Injector:83 org.matsim.counts.CountsModule$CountsInitializer 
2018-02-12 16:07:16,252  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@315105f[Scopes.SINGLETON]
2018-02-12 16:07:16,253  INFO Injector:85   --> source: org.matsim.counts.CountsModule.install(CountsModule.java:43)
2018-02-12 16:07:16,253  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:16,253  INFO Injector:91 
2018-02-12 16:07:16,256  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.counts.CountsControlerListener
2018-02-12 16:07:16,256  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ModeStatsControlerListener
2018-02-12 16:07:16,256  INFO NetworkImpl:159  node # 1
2018-02-12 16:07:16,257  INFO NetworkImpl:159  node # 4
2018-02-12 16:07:16,257  INFO NetworkImpl:159  node # 16
2018-02-12 16:07:16,257  INFO NetworkImpl:159  node # 64
2018-02-12 16:07:16,257  INFO NetworkImpl:159  node # 256
2018-02-12 16:07:16,257  INFO NetworkImpl:159  node # 1024
2018-02-12 16:07:16,258  INFO NetworkImpl:155  link # 1
2018-02-12 16:07:16,259  INFO NetworkImpl:155  link # 4
2018-02-12 16:07:16,259  INFO NetworkImpl:155  link # 16
2018-02-12 16:07:16,259  INFO NetworkImpl:155  link # 64
2018-02-12 16:07:16,260  INFO NetworkImpl:155  link # 256
2018-02-12 16:07:16,262  INFO NetworkImpl:155  link # 1024
2018-02-12 16:07:16,268  INFO NetworkImpl:155  link # 4096
2018-02-12 16:07:16,285  INFO ControlerListenerManagerImpl:107 calling notifyStartup on org.matsim.analysis.ScoreStatsControlerListener
2018-02-12 16:07:16,285  INFO ControlerListenerManagerImpl:110 all ControlerStartupListeners called.
2018-02-12 16:07:16,285  INFO ControlerUtils:58 config dump before iterations start
2018-02-12 16:07:16,285  INFO Config:563 setting context to [file:/Users/kainagel/git/au-flood-evacuation/]
2018-02-12 16:07:16,288  INFO ControlerUtils:62 

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<config>
<!-- ====================================================================== -->
	<module name="JDEQSim" >
		<param name="carSize" value="7.5" />
		<param name="endTime" value="undefined" />
		<param name="flowCapacityFactor" value="1.0" />
		<param name="gapTravelSpeed" value="15.0" />
		<param name="minimumInFlowCapacity" value="1800.0" />
		<param name="squeezeTime" value="1800.0" />
		<param name="storageCapacityFactor" value="1.0" />
	</module>
<!-- ====================================================================== -->
	<module name="TimeAllocationMutator" >
		<!-- Default:true; Defines whether time mutation changes an activity's duration. -->
		<param name="mutationAffectsDuration" value="true" />
		<!-- Default:1800.0; Defines how many seconds a time mutation can maximally shift a time. -->
		<param name="mutationRange" value="1800.0" />
		<!-- false; Use individual settings for each subpopulation. If enabled but no settings are found, regular settings are uses as fallback. -->
		<param name="useIndividualSettingsForSubpopulations" value="false" />
	</module>
<!-- ====================================================================== -->
<!-- ====================================================================== -->
	<module name="changeMode" >
		<param name="ignoreCarAvailability" value="true" />
		<param name="modes" value="car,pt" />
	</module>
<!-- ====================================================================== -->
	<module name="controler" >
		<!-- Sets whether graphs showing some analyses should automatically be generated during the simulation. The generation of graphs usually takes a small amount of time that does not have any weight in big simulations, but add a significant overhead in smaller runs or in test cases where the graphical output is not even requested. -->
		<param name="createGraphs" value="true" />
		<!-- true if at the end of a run, plans, network, config etc should be dumped to a file -->
		<param name="dumpDataAtEnd" value="true" />
		<!-- Default=false. If enabled, the router takes travel times needed for turning moves into account. Cannot be used if the (Fast)AStarLandmarks routing or TravelTimeCalculator.separateModes is enabled. -->
		<param name="enableLinkToLinkRouting" value="false" />
		<!-- Default=xml; Specifies the file format for writing events. Currently supported: xml.
		Multiple values can be specified separated by commas (','). -->
		<param name="eventsFileFormat" value="xml" />
		<!-- Default=0;  -->
		<param name="firstIteration" value="0" />
		<!-- Default=1000;  -->
		<param name="lastIteration" value="0" />
		<!-- Defines which mobility simulation will be used. Currently supported: qsim JDEQSim 
		Depending on the chosen mobsim, you'll have to add additional config modules to configure the corresponding mobsim.
		For 'qsim', add a module 'qsim' to the config. -->
		<param name="mobsim" value="qsim" />
		<param name="outputDirectory" value="test/output/org/matsim/run/RunMatsim4FloodEvacuationTest/test/" />
		<!-- Possible values: failIfDirectoryExists, overwriteExistingFiles, deleteDirectoryIfExists -->
		<param name="overwriteFiles" value="deleteDirectoryIfExists" />
		<!-- The type of routing (least cost path) algorithm used, may have the values: Dijkstra, FastDijkstra, AStarLandmarks or FastAStarLandmarks -->
		<param name="routingAlgorithmType" value="Dijkstra" />
		<!-- An identifier for the current run which is used as prefix for output files and mentioned in output xml files etc. -->
		<param name="runId" value="null" />
		<!-- Comma-separated list of visualizer output file formats. `transims', `googleearth', and `otfvis'. -->
		<param name="snapshotFormat" value="" />
		<!-- iterationNumber % writeEventsInterval == 0 defines in which iterations events are written to a file. `0' disables events writing completely. -->
		<param name="writeEventsInterval" value="10" />
		<!-- iterationNumber % writePlansInterval == 0 defines (hopefully) in which iterations plans are written to a file. `0' disables plans writing completely.  Some plans in early iterations are always written -->
		<param name="writePlansInterval" value="10" />
		<!-- iterationNumber % writeSnapshotsInterval == 0 defines in which iterations snapshots are written to a file. `0' disables snapshots writing completely -->
		<param name="writeSnapshotsInterval" value="1" />
	</module>
<!-- ====================================================================== -->
	<module name="counts" >
		<!-- Transport modes that will be respected for the counts comparison. 'car' is default, which includes also bussed from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />
		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the counts comparison. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeCountsInterval -->
		<param name="averageCountsOverIterations" value="5" />
		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />
		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />
		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />
		<!-- If true, link counts from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<!-- input file name to counts package -->
		<param name="inputCountsFile" value="null" />
		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="txt" />
		<!-- Specifies how often the counts comparison should be calculated and written. -->
		<param name="writeCountsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="facilities" >
		<!-- If set to 'true', empty activity option will be created. -->
		<param name="addEmptyActivityOption" value="false" />
		<!-- Default is 'true'. In the case that a facility has no link assigned, the ActivityFacility can be assigned to the closest link. If there should be only one ActivityFacility per link and if no link-assignment should be done, set to 'false'.This will create a new ActivityFacility at the coordinate and the facility will not be assigned to a link. -->
		<param name="assigningLinksToFacilitiesIfMissing" value="true" />
		<!-- If set to 'true', opening time will be assigned to activity facilities from ActivityParams. Default is false. This will NOT override option 'addEmptyActivityOption'. -->
		<param name="assigningOpeningTime" value="false" />
		<!-- This defines how facilities should be created. Possible values: none fromFile setInScenario onePerActivityLocationInPlansFile  -->
		<param name="facilitiesSource" value="none" />
		<!-- A prefix to be used in activityFacility id. -->
		<param name="idPrefix" value="" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<param name="inputFacilitiesFile" value="null" />
		<param name="inputFacilityAttributesFile" value="null" />
		<!-- Sets whether all activities on a link should be collected within one ActivityFacility. Default is 'true'. If set to 'false', for each coordinate found in the population's activities a separate ActivityFacility will be created. -->
		<param name="oneFacilityPerLink" value="true" />
		<!-- If set to 'true' (which is the default), the link and coordinate attributes are replaced by null reference in the activities, as this information is now available via the facility. -->
		<param name="removingLinksAndCoordinates" value="true" />
	</module>
<!-- ====================================================================== -->
	<module name="global" >
		<param name="coordinateSystem" value="Atlantis" />
		<param name="insistingOnDeprecatedConfigVersion" value="true" />
		<!-- "global" number of threads.  This number is used, e.g., for replanning, but NOT in the mobsim.  This can typically be set to as many cores as you have available, or possibly even slightly more. -->
		<param name="numberOfThreads" value="2" />
		<param name="randomSeed" value="4711" />
	</module>
<!-- ====================================================================== -->
	<module name="households" >
		<param name="inputFile" value="null" />
		<param name="inputHouseholdAttributesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="linkStats" >
		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the link statistics. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeLinkStatsInterval -->
		<param name="averageLinkStatsOverIterations" value="5" />
		<!-- Specifies how often the link stats should be calculated and written. Use 0 to disable the generation of link stats. -->
		<param name="writeLinkStatsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="network" >
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<param name="inputChangeEventsFile" value="null" />
		<param name="inputNetworkFile" value="hn_net_ses_emme_2041_network.xml.gz " />
		<param name="laneDefinitionsFile" value="null" />
		<param name="timeVariantNetwork" value="false" />
	</module>
<!-- ====================================================================== -->
	<module name="parallelEventHandling" >
		<!-- Estimated number of events during mobsim run. An optional optimization hint for the framework. -->
		<param name="estimatedNumberOfEvents" value="null" />
		<!-- Number of threads for parallel events handler. _null_ means the framework decides by itself. 0 is currently not possible. -->
		<param name="numberOfThreads" value="null" />
		<!-- If enabled, each event handler is assigned to its own thread. Note that enabling this feature disabled the numberOfThreads option! This feature is still experimental! -->
		<param name="oneThreadPerHandler" value="false" />
		<!-- If enabled, it is ensured that all events that are created during a time step of the mobility simulation are processed before the next time step is simulated. E.g. neccessary when within-day replanning is used. -->
		<param name="synchronizeOnSimSteps" value="true" />
	</module>
<!-- ====================================================================== -->
	<module name="planCalcScore" >
		<!-- logit model scale parameter. default: 1.  Has name and default value for historical reasons (see Bryan Raney's phd thesis). -->
		<param name="BrainExpBeta" value="1.0" />
		<param name="PathSizeLogitBeta" value="1.0" />
		<!-- fraction of iterations at which MSA score averaging is started. The matsim theory department suggests to use this together with switching off choice set innovation (where a similar switch exists), but it has not been tested yet. -->
		<param name="fractionOfIterationsToStartScoreMSA" value="null" />
		<!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
		<param name="learningRate" value="1.0" />
		<!-- There used to be a plateau between duration=0 and duration=zeroUtilityDuration. This caused durations to evolve to zero once they were below zeroUtilityDuration, causing problems.  Only use this switch if you need to be backwards compatible with some old results.  (changed nov'13) -->
		<param name="usingOldScoringBelowZeroUtilityDuration" value="false" />
		<!-- write a plans file in each iteration directory which contains what each agent actually did, and the score it received. -->
		<param name="writeExperiencedPlans" value="false" />
		<parameterset type="scoringParameters" >
			<param name="earlyDeparture" value="-0.0" />
			<param name="lateArrival" value="-18.0" />
			<param name="marginalUtilityOfMoney" value="1.0" />
			<param name="performing" value="6.0" />
			<param name="subpopulation" value="null" />
			<param name="utilityOfLineSwitch" value="-1.0" />
			<param name="waiting" value="-0.0" />
			<param name="waitingPt" value="-6.0" />
			<parameterset type="activityParams" >
				<param name="activityType" value="dummy" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="02:00:00" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="car interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="pt interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="bike interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="other interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="walk interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="home" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="start" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="activityParams" >
				<param name="activityType" value="safe" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />
				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="car" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="pt" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="walk" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="bike" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="ride" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />
				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />
				<param name="mode" value="other" />
				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="plans" >
		<!-- String: minOfDurationAndEndTime tryEndTimeThenDuration endTimeOnly. Anything besides minOfDurationAndEndTime will internally use a different (simpler) version of the TimeAllocationMutator. -->
		<param name="activityDurationInterpretation" value="tryEndTimeThenDuration" />
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />
		<!-- Path to a file containing person attributes (required file format: ObjectAttributes). -->
		<param name="inputPersonAttributesFile" value="null" />
		<param name="inputPlansFile" value="pop.xml.gz" />
		<!-- Defines how routes are stored in memory. Currently supported: LinkNetworkRoute, CompressedNetworkRoute. -->
		<param name="networkRouteType" value="LinkNetworkRoute" />
		<!-- (not tested) will remove plan attributes that are presumably not used, such as activityStartTime. default=false -->
		<param name="removingUnnecessaryPlanAttributes" value="false" />
		<!-- Name of the (Object)Attribute defining the subpopulation to which pertains a Person (as freight, through traffic, etc.). The attribute must be of String type.  Change away from default only in desperate situations. -->
		<param name="subpopulationAttributeName" value="subpopulation" />
	</module>
<!-- ====================================================================== -->
	<module name="planscalcroute" >
		<!-- All the modes for which the router is supposed to generate network routes (like car) -->
		<param name="networkModes" value="car" />
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="bike" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="4.166666666666667" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="access_walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="egress_walk" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="0.8333333333333333" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="undefined" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="13.88888888888889" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="ride" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="1.0" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="pt" />
			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="2.0" />
			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>
	</module>
<!-- ====================================================================== -->
	<module name="ptCounts" >
		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />
		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />
		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />
		<!-- input file containing the alighting (getting off) counts for pt -->
		<param name="inputAlightCountsFile" value="null" />
		<!-- input file containing the boarding (getting on) counts for pt -->
		<param name="inputBoardCountsFile" value="null" />
		<!-- input file containing the occupancy counts for pt -->
		<param name="inputOccupancyCountsFile" value="null" />
		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="null" />
		<!-- every how many iterations (starting with 0) counts comparisons are generated -->
		<param name="ptCountsInterval" value="10" />
	</module>
<!-- ====================================================================== -->
	<module name="qsim" >
		<!-- If set to true, creates a vehicle for each person corresponding to every network mode. However, this will be overridden if vehicle source is fromVehiclesData. -->
		<param name="creatingVehiclesForAllNetworkModes" value="true" />
		<param name="endTime" value="36:00:00" />
		<param name="flowCapacityFactor" value="1.0" />
		<!-- decides if waiting vehicles enter the network after or before the already driving vehicles were moved. Default: false -->
		<param name="insertingWaitingVehiclesBeforeDrivingVehicles" value="false" />
		<!-- If link dynamics is set as SeepageQ, set to false if all seep modes should perform seepage. Default is true (better option). -->
		<param name="isRestrictingSeepage" value="true" />
		<!-- If link dynamics is set as SeepageQ, set to true if seep mode do not consumes any space on the link. Default is false. -->
		<param name="isSeepModeStorageFree" value="false" />
		<!-- default: FIFO; options: FIFO PassingQ SeepageQ -->
		<param name="linkDynamics" value="FIFO" />
		<!-- The (initial) width of the links of the network. Use positive floating point values. This is used only for visualisation. -->
		<param name="linkWidth" value="30.0" />
		<!-- [comma-separated list] Defines which modes are congested modes. Technically, these are the modes that the departure handler of the netsimengine handles.  Effective cell size, effective lane width, flow capacity factor, and storage capacity factor need to be set with diligence.  Need to be vehicular modes to make sense. -->
		<param name="mainMode" value="car" />
		<!-- Shortens a link in the visualization, i.e. its start and end point are moved into towards the center. Does not affect traffic flow.  -->
		<param name="nodeOffset" value="0.0" />
		<!-- Number of threads used for the QSim.  Note that this setting is independent from the "global" threads setting.  In contrast to earlier versions, the non-parallel special version is no longer there. -->
		<param name="numberOfThreads" value="1" />
		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="false" />
		<!-- If link dynamics is set as SeepageQ, set a seep mode. Default is bike. -->
		<param name="seepMode" value="bike" />
		<!-- Possible values: minOfEndtimeAndMobsimFinished, onlyUseEndtime -->
		<param name="simEndtimeInterpretation" value="null" />
		<!-- Options: maxOfStarttimeAndEarliestActivityEnd onlyUseStarttime  -->
		<param name="simStarttimeInterpretation" value="maxOfStarttimeAndEarliestActivityEnd" />
		<!-- snapshotStyle. One of: equiDist queue withHoles withHolesAndShowHoles kinematicWaves  -->
		<param name="snapshotStyle" value="equiDist" />
		<param name="snapshotperiod" value="00:00:00" />
		<param name="startTime" value="undefined" />
		<param name="storageCapacityFactor" value="1.0" />
		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="10.0" />
		<param name="timeStepSize" value="00:00:01" />
		<!-- options: queue withHoles kinematicWaves  -->
		<param name="trafficDynamics" value="queue" />
		<!-- Set this parameter to true if lanes should be used, false if not. -->
		<param name="useLanes" value="false" />
		<!-- If a route does not reference a vehicle, agents will use the vehicle with the same id as their own. -->
		<param name="usePersonIdForMissingVehicleId" value="true" />
		<!-- If false, the qsim accumulates fractional flows up to one flow unit in every time step.  If true, flows are updated only if an agent wants to enter the link or an agent is added to buffer. Default is true. -->
		<param name="usingFastCapacityUpdate" value="true" />
		<!-- if the qsim should use as many runners as there are threads (Christoph's dissertation version) or more of them, together with a thread pool (seems to be faster in some situations, but is not tested). -->
		<param name="usingThreadpool" value="true" />
		<!-- Defines what happens if an agent wants to depart, but the specified vehicle is not available. One of: teleport wait exception  -->
		<param name="vehicleBehavior" value="teleport" />
		<!-- If vehicles should all be the same default vehicle, or come from the vehicles file, or something else.  Possible values:  defaultVehicle modeVehicleTypesFromVehiclesData fromVehiclesData -->
		<param name="vehiclesSource" value="defaultVehicle" />
	</module>
<!-- ====================================================================== -->
	<module name="scenario" >
	</module>
<!-- ====================================================================== -->
	<module name="strategy" >
		<!-- the external executable will be called with a config file as argument.  This is the pathname to a possible skeleton config, to which additional information will be added.  Can be null. -->
		<param name="ExternalExeConfigTemplate" value="null" />
		<!-- time out value (in seconds) after which matsim will consider the external strategy as failed -->
		<param name="ExternalExeTimeOut" value="3600" />
		<!-- root directory for temporary files generated by the external executable. Provided as a service; I don't think this is used by MATSim. -->
		<param name="ExternalExeTmpFileRootDir" value="null" />
		<!-- fraction of iterations where innovative strategies are switched off.  Something link 0.8 should be good.  E.g. if you run from iteration 400 to iteration 500, innovation is switched off at iteration 480 -->
		<param name="fractionOfIterationsToDisableInnovation" value="Infinity" />
		<!-- maximum number of plans per agent.  ``0'' means ``infinity''.  Currently (2010), ``5'' is a good number -->
		<param name="maxAgentPlanMemorySize" value="5" />
		<!-- strategyName of PlanSelector for plans removal.  Possible defaults: WorstPlanSelector SelectRandom SelectExpBetaForRemoval ChangeExpBetaForRemoval PathSizeLogitSelectorForRemoval . The current default, WorstPlanSelector is not a good choice from a discrete choice theoretical perspective. Alternatives, however, have not been systematically tested. kai, feb'12 -->
		<param name="planSelectorForRemoval" value="WorstPlanSelector" />
	</module>
<!-- ====================================================================== -->
	<module name="subtourModeChoice" >
		<!-- Defines the chain-based modes, seperated by commas -->
		<param name="chainBasedModes" value="car,bike" />
		<!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
		<param name="considerCarAvailability" value="false" />
		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt,bike,walk" />
	</module>
<!-- ====================================================================== -->
	<module name="transit" >
		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputScheduleCRS" value="null" />
		<!-- Optional input file containing additional attributes for transit lines, stored as ObjectAttributes. -->
		<param name="transitLinesAttributesFile" value="null" />
		<!-- Comma-separated list of transportation modes that are handled as transit. Defaults to 'pt'. -->
		<param name="transitModes" value="pt" />
		<!-- Input file containing the transit schedule to be simulated. -->
		<param name="transitScheduleFile" value="null" />
		<!-- Optional input file containing additional attributes for transit stop facilities, stored as ObjectAttributes. -->
		<param name="transitStopsAttributesFile" value="null" />
		<!-- Set this parameter to true if transit should be simulated, false if not. -->
		<param name="useTransit" value="false" />
		<!-- Input file containing the vehicles used by the departures in the transit schedule. -->
		<param name="vehiclesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="transitRouter" >
		<!-- additional time the router allocates when a line switch happens. Can be interpreted as a 'safety' time that agents need to safely transfer from one line to another -->
		<param name="additionalTransferTime" value="0.0" />
		<!-- Factor with which direct walk generalized cost is multiplied before it is compared to the pt generalized cost.  Set to a very high value to reduce direct walk results. -->
		<param name="directWalkFactor" value="1.0" />
		<!-- step size to increase searchRadius if no stops are found -->
		<param name="extensionRadius" value="200.0" />
		<!-- maximum beeline distance between stops that agents could transfer to by walking -->
		<param name="maxBeelineWalkConnectionDistance" value="100.0" />
		<!-- the radius in which stop locations are searched, given a start or target coordinate -->
		<param name="searchRadius" value="1000.0" />
	</module>
<!-- ====================================================================== -->
	<module name="travelTimeCalculator" >
		<!-- Transport modes that will be respected by the travel time collector. 'car' is default, which includes also busses from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />
		<param name="calculateLinkToLinkTravelTimes" value="false" />
		<param name="calculateLinkTravelTimes" value="true" />
		<!-- If true, link travel times from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />
		<!-- The lenght (in sec) of the time period that is splited into time bins; an additional time bin is created to aggregate all travel times collected after maxTime -->
		<param name="maxTime" value="108000" />
		<!-- If true, link travel times are measured and calculated separately for each mode in analyzedModes. Other modes are ignored. If true, filterModes has no effect. -->
		<param name="separateModes" value="false" />
		<!-- How to deal with congested time bins that have no link entry events. `optimistic' assumes free speed (too optimistic); 'experimental_LastMile' is experimental and probably too pessimistic. -->
		<param name="travelTimeAggregator" value="optimistic" />
		<!-- The size of the time bin (in sec) into which the link travel times are aggregated for the router -->
		<param name="travelTimeBinSize" value="900" />
		<!-- possible values: nullTravelTimeCalculatorArray TravelTimeCalculatorHashMap  -->
		<param name="travelTimeCalculator" value="TravelTimeCalculatorArray" />
		<!-- How to deal with link entry times at different positions during the time bin. Currently supported: average, linearinterpolation -->
		<param name="travelTimeGetter" value="average" />
	</module>
<!-- ====================================================================== -->
	<module name="vehicles" >
		<param name="vehiclesFile" value="null" />
	</module>
<!-- ====================================================================== -->
	<module name="vspExperimental" >
		<!-- (do not use except of you have to) There was a problem with pt interaction scoring.  Some people solved it by overwriting the parameters of the pt interaction activity type.  Doing this now throws an Exception.  If you still insist on doing this, set the following to true. -->
		<param name="isAbleToOverwritePtInteractionParams" value="false" />
		<param name="isGeneratingBoardingDeniedEvent" value="false" />
		<!-- if an approximation of the opportunity cost of time is included into the radius calculation for location choice.`true' will be faster, but it is an approximation.  Default is `true'; `false' is available for backwards compatibility. -->
		<param name="isUsingOpportunityCostOfTimeForLocationChoice" value="true" />
		<param name="logitScaleParamForPlansRemoval" value="1.0" />
		<!-- Options: | ignore | info | warn | abort | .  When violating VSP defaults, this results in nothing, logfile infos, logfile warnings, or aborts.  Members of VSP should use `abort' or talk to kai. -->
		<param name="vspDefaultsCheckingLevel" value="ignore" />
		<!-- if true then writes output_events in output directory.  default is `false'. Will only work when lastIteration is multiple of events writing interval -->
		<param name="writingOutputEvents" value="true" />
	</module>
<!-- ====================================================================== -->

</config>

2018-02-12 16:07:16,288  INFO ControlerUtils:63 Complete config dump done.
2018-02-12 16:07:16,288  INFO ControlerUtils:64 Checking consistency of config...
2018-02-12 16:07:16,289  INFO PlanCalcScoreConfigGroup$ScoringParameterSet:1372 NO OPENING OR CLOSING TIMES DEFINED!

There is no activity type that has an opening *and* closing time (or opening time and late penalty) defined.
This usually means that the activity chains can be shifted by an arbitrary
number of hours without having an effect on the score of the plans, and thus
resulting in wrong results / traffic patterns.
If you are using MATSim without time adaptation, you can ignore this warning.


2018-02-12 16:07:16,289  INFO VspConfigConsistencyCheckerImpl:58 NOT running vsp config consistency check because vsp defaults checking level is set to IGNORE
2018-02-12 16:07:16,289  INFO ControlerUtils:66 Checking consistency of config done.
2018-02-12 16:07:16,466  INFO Counter:61 [PersonPrepareForSim] handled person # 1
2018-02-12 16:07:16,478  INFO Counter:61 [PersonPrepareForSim] handled person # 2
2018-02-12 16:07:16,479  INFO Counter:61 [PersonPrepareForSim] handled person # 4
2018-02-12 16:07:16,505  INFO Counter:61 [PersonPrepareForSim] handled person # 8
2018-02-12 16:07:16,552  INFO Counter:61 [PersonPrepareForSim] handled person # 16
2018-02-12 16:07:16,644  INFO Counter:61 [PersonPrepareForSim] handled person # 32
2018-02-12 16:07:16,850  INFO Counter:61 [PersonPrepareForSim] handled person # 64
2018-02-12 16:07:17,237  INFO Counter:61 [PersonPrepareForSim] handled person # 128
2018-02-12 16:07:17,672  INFO Counter:61 [PersonPrepareForSim] handled person # 256
2018-02-12 16:07:17,907  INFO Counter:61 [PersonPrepareForSim] handled person # 512
2018-02-12 16:07:17,960  INFO Counter:61 [PersonPrepareForSim] handled person # 1024
2018-02-12 16:07:18,805  INFO Counter:61 [PersonPrepareForSim] handled person # 2048
2018-02-12 16:07:20,091  INFO Counter:61 [PersonPrepareForSim] handled person # 4096
2018-02-12 16:07:21,389  INFO Counter:61 [PersonPrepareForSim] handled person # 8192
2018-02-12 16:07:27,018  INFO Counter:61 [PersonPrepareForSim] handled person # 16384
2018-02-12 16:07:27,578  INFO Counter:67 [PersonPrepareForSim] handled person # 17709
2018-02-12 16:07:27,579  INFO Counter:61  vehicles # 1
2018-02-12 16:07:27,579  INFO Counter:61  vehicles # 2
2018-02-12 16:07:27,579  INFO Counter:61  vehicles # 4
2018-02-12 16:07:27,579  INFO Counter:61  vehicles # 8
2018-02-12 16:07:27,579  INFO Counter:61  vehicles # 16
2018-02-12 16:07:27,580  INFO Counter:61  vehicles # 32
2018-02-12 16:07:27,580  INFO Counter:61  vehicles # 64
2018-02-12 16:07:27,580  INFO Counter:61  vehicles # 128
2018-02-12 16:07:27,581  INFO Counter:61  vehicles # 256
2018-02-12 16:07:27,582  INFO Counter:61  vehicles # 512
2018-02-12 16:07:27,584  INFO Counter:61  vehicles # 1024
2018-02-12 16:07:27,586  INFO Counter:61  vehicles # 2048
2018-02-12 16:07:27,590  INFO Counter:61  vehicles # 4096
2018-02-12 16:07:27,598  INFO Counter:61  vehicles # 8192
2018-02-12 16:07:27,611  INFO Counter:61  vehicles # 16384
2018-02-12 16:07:27,629  INFO AbstractController:133 ###################################################
2018-02-12 16:07:27,629  INFO AbstractController:134 ### ITERATION 0 BEGINS
2018-02-12 16:07:27,629  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LegHistogramListener
2018-02-12 16:07:27,629  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.analysis.LinkStatsControlerListener
2018-02-12 16:07:27,629  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.replanning.ReplanningContextImpl
2018-02-12 16:07:27,629  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ExperiencedPlansServiceImpl$1
2018-02-12 16:07:27,637  INFO ControlerListenerManagerImpl:145 calling notifyIterationStarts on org.matsim.core.scoring.ScoringFunctionsForPopulation$1
2018-02-12 16:07:27,677  INFO ControlerListenerManagerImpl:148 [it.0] all ControlerIterationStartsListeners called.
2018-02-12 16:07:27,677  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-02-12 16:07:27,677  INFO EventsManagerImpl:170 resetting Event-Handlers
2018-02-12 16:07:27,677  INFO EventsManagerImpl:177   org.matsim.core.trafficmonitoring.TravelTimeCalculator
2018-02-12 16:07:27,686  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToLegs
2018-02-12 16:07:27,686  INFO EventsManagerImpl:177   org.matsim.analysis.VolumesAnalyzer
2018-02-12 16:07:27,687  INFO EventsManagerImpl:177   org.matsim.core.scoring.EventsToActivities
2018-02-12 16:07:27,687  INFO EventsManagerImpl:177   org.matsim.analysis.CalcLegTimes
2018-02-12 16:07:27,687  INFO EventsManagerImpl:177   org.matsim.analysis.LegHistogram
2018-02-12 16:07:27,687  INFO EventsManagerImpl:177   org.matsim.core.scoring.ScoringFunctionsForPopulation
2018-02-12 16:07:27,687  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2018-02-12 16:07:27,687  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2018-02-12 16:07:27,688  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2018-02-12 16:07:27,688  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2018-02-12 16:07:27,688  INFO EventsManagerImpl:156 
2018-02-12 16:07:27,688  INFO EventsManagerImpl:144 adding Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2018-02-12 16:07:27,688  INFO EventsManagerImpl:148   org.matsim.core.events.algorithms.EventWriter
2018-02-12 16:07:27,688  INFO EventsManagerImpl:148   org.matsim.core.events.handler.BasicEventHandler
2018-02-12 16:07:27,688  INFO EventsManagerImpl:207     > org.matsim.api.core.v01.events.Event
2018-02-12 16:07:27,688  INFO EventsManagerImpl:156 
2018-02-12 16:07:27,689  INFO ControlerListenerManagerImpl:224 calling notifyBeforeMobsim on org.matsim.core.controler.corelisteners.PlansDumpingImpl
2018-02-12 16:07:27,689  INFO PlansDumpingImpl:75 dumping plans...
2018-02-12 16:07:27,698  INFO Counter:61 [PopulationWriter] dumped person # 1
2018-02-12 16:07:27,698  INFO Counter:61 [PopulationWriter] dumped person # 2
2018-02-12 16:07:27,699  INFO Counter:61 [PopulationWriter] dumped person # 4
2018-02-12 16:07:27,699  INFO Counter:61 [PopulationWriter] dumped person # 8
2018-02-12 16:07:27,699  INFO Counter:61 [PopulationWriter] dumped person # 16
2018-02-12 16:07:27,700  INFO Counter:61 [PopulationWriter] dumped person # 32
2018-02-12 16:07:27,701  INFO Counter:61 [PopulationWriter] dumped person # 64
2018-02-12 16:07:27,702  INFO Counter:61 [PopulationWriter] dumped person # 128
2018-02-12 16:07:27,705  INFO Counter:61 [PopulationWriter] dumped person # 256
2018-02-12 16:07:27,710  INFO Counter:61 [PopulationWriter] dumped person # 512
2018-02-12 16:07:27,716  INFO Counter:61 [PopulationWriter] dumped person # 1024
2018-02-12 16:07:27,730  INFO Counter:61 [PopulationWriter] dumped person # 2048
2018-02-12 16:07:27,762  INFO Counter:61 [PopulationWriter] dumped person # 4096
2018-02-12 16:07:27,810  INFO Counter:61 [PopulationWriter] dumped person # 8192
2018-02-12 16:07:27,918  INFO Counter:61 [PopulationWriter] dumped person # 16384
2018-02-12 16:07:27,935  INFO PopulationWriter:139 Population written to: test/output/org/matsim/run/RunMatsim4FloodEvacuationTest/test/ITERS/it.0/0.plans.xml.gz
2018-02-12 16:07:27,936  INFO Counter:67 [PopulationWriter] dumped person # 17709
2018-02-12 16:07:27,936  INFO PlansDumpingImpl:92 finished plans dump.
2018-02-12 16:07:27,936  INFO ControlerListenerManagerImpl:229 calling notifyBeforeMobsim on org.matsim.core.population.VspPlansCleaner
2018-02-12 16:07:27,952  INFO ControlerListenerManagerImpl:232 [it.0] all ControlerBeforeMobsimListeners called.
2018-02-12 16:07:27,957  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2018-02-12 16:07:27,957  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2018-02-12 16:07:27,957  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimAfterSimStepListener
2018-02-12 16:07:27,957  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeCleanupListener
2018-02-12 16:07:27,958  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimInitializedListener
2018-02-12 16:07:27,958  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.vis.snapshotwriters.SnapshotWriterManager
2018-02-12 16:07:27,973  WARN QueueWithBuffer:331 Link 10161-2653 too small: enlarge storage capacity from: 64.0 Vehicles to: 240.0000000000048 Vehicles.  This is not fatal, but modifies the traffic flow dynamics.
2018-02-12 16:07:27,974  WARN QueueWithBuffer:331 Link 10169-2079 too small: enlarge storage capacity from: 54.666666666666664 Vehicles to: 205.0000000000041 Vehicles.  This is not fatal, but modifies the traffic flow dynamics.
2018-02-12 16:07:27,974  WARN QueueWithBuffer:331 Link 10174-2086 too small: enlarge storage capacity from: 73.33333333333333 Vehicles to: 275.0000000000055 Vehicles.  This is not fatal, but modifies the traffic flow dynamics.
2018-02-12 16:07:27,974  WARN QueueWithBuffer:331 Link 10175-2080 too small: enlarge storage capacity from: 50.666666666666664 Vehicles to: 190.0000000000038 Vehicles.  This is not fatal, but modifies the traffic flow dynamics.
2018-02-12 16:07:27,975  WARN QueueWithBuffer:331 Link 10175-2085 too small: enlarge storage capacity from: 50.666666666666664 Vehicles to: 190.0000000000038 Vehicles.  This is not fatal, but modifies the traffic flow dynamics.
2018-02-12 16:07:27,976  WARN QueueWithBuffer:331 Link 10352-1790 too small: enlarge storage capacity from: 42.666666666666664 Vehicles to: 160.00000000000318 Vehicles.  This is not fatal, but modifies the traffic flow dynamics.
2018-02-12 16:07:27,976  WARN QueueWithBuffer:331 Link 10360-2038 too small: enlarge storage capacity from: 97.33333333333333 Vehicles to: 365.0000000000073 Vehicles.  This is not fatal, but modifies the traffic flow dynamics.
2018-02-12 16:07:27,976  WARN QueueWithBuffer:331 Link 10363-1796 too small: enlarge storage capacity from: 48.0 Vehicles to: 180.00000000000358 Vehicles.  This is not fatal, but modifies the traffic flow dynamics.
2018-02-12 16:07:27,976  WARN QueueWithBuffer:331 Link 10393-2036 too small: enlarge storage capacity from: 184.0 Vehicles to: 690.0000000000138 Vehicles.  This is not fatal, but modifies the traffic flow dynamics.
2018-02-12 16:07:27,977  WARN QueueWithBuffer:331 Link 10398-1792 too small: enlarge storage capacity from: 21.333333333333332 Vehicles to: 80.00000000000159 Vehicles.  This is not fatal, but modifies the traffic flow dynamics.
2018-02-12 16:07:27,977  WARN QueueWithBuffer:331 Link 10404-2030 too small: enlarge storage capacity from: 108.0 Vehicles to: 405.00000000000813 Vehicles.  This is not fatal, but modifies the traffic flow dynamics.
2018-02-12 16:07:27,977  WARN QueueWithBuffer:334 Additional warnings of this type are suppressed.
2018-02-12 16:07:28,006  INFO Injector:83 org.matsim.core.mobsim.qsim.qnetsimengine.VehicularDepartureHandler 
2018-02-12 16:07:28,006  INFO Injector:84   --> provider: Key[type=org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngineDepartureHandlerProvider, annotation=[none]][Scopes.SINGLETON]
2018-02-12 16:07:28,006  INFO Injector:85   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:25)
2018-02-12 16:07:28,006  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:28,006  INFO Injector:91 
2018-02-12 16:07:28,007  INFO Injector:83 org.matsim.core.mobsim.qsim.agents.AgentFactory 
2018-02-12 16:07:28,007  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.agents.AgentFactory, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@65afeb6d}[Scopes.SINGLETON]
2018-02-12 16:07:28,007  INFO Injector:85   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:30)
2018-02-12 16:07:28,007  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:28,007  INFO Injector:91 
2018-02-12 16:07:28,007  INFO Injector:83 org.matsim.core.mobsim.qsim.interfaces.Netsim 
2018-02-12 16:07:28,008  INFO Injector:84   --> provider: FactoryProxy{key=Key[type=org.matsim.core.mobsim.qsim.interfaces.Netsim, annotation=[none]], provider=com.google.inject.internal.ConstructorBindingImpl$Factory@5cf8676a[Scopes.SINGLETON]}
2018-02-12 16:07:28,008  INFO Injector:85   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:65)
2018-02-12 16:07:28,008  INFO Injector:87   --> scope: Scopes.NO_SCOPE
2018-02-12 16:07:28,008  INFO Injector:91 
2018-02-12 16:07:28,008  INFO Injector:83 org.matsim.core.mobsim.jdeqsim.MessageQueue 
2018-02-12 16:07:28,008  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@68b366e2[Scopes.SINGLETON]
2018-02-12 16:07:28,008  INFO Injector:85   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:24)
2018-02-12 16:07:28,008  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:28,009  INFO Injector:91 
2018-02-12 16:07:28,009  INFO Injector:83 org.matsim.core.mobsim.qsim.jdeqsimengine.SteppableScheduler 
2018-02-12 16:07:28,009  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@991cbde[Scopes.SINGLETON]
2018-02-12 16:07:28,009  INFO Injector:85   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:25)
2018-02-12 16:07:28,009  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:28,009  INFO Injector:91 
2018-02-12 16:07:28,010  INFO Injector:83 org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine 
2018-02-12 16:07:28,010  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@568750b7[Scopes.SINGLETON]
2018-02-12 16:07:28,010  INFO Injector:85   --> source: org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueuePlugin$1.configure(MessageQueuePlugin.java:26)
2018-02-12 16:07:28,010  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:28,010  INFO Injector:91 
2018-02-12 16:07:28,010  INFO Injector:83 org.matsim.core.mobsim.qsim.ActivityEngine 
2018-02-12 16:07:28,010  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@2fb25f4c[Scopes.SINGLETON]
2018-02-12 16:07:28,011  INFO Injector:85   --> source: org.matsim.core.mobsim.qsim.ActivityEnginePlugin$1.configure(ActivityEnginePlugin.java:23)
2018-02-12 16:07:28,011  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:28,011  INFO Injector:91 
2018-02-12 16:07:28,011  INFO Injector:83 org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEngine 
2018-02-12 16:07:28,011  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@7237f3c1[Scopes.SINGLETON]
2018-02-12 16:07:28,011  INFO Injector:85   --> source: org.matsim.core.mobsim.qsim.qnetsimengine.QNetsimEnginePlugin$1.configure(QNetsimEnginePlugin.java:24)
2018-02-12 16:07:28,011  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:28,012  INFO Injector:91 
2018-02-12 16:07:28,012  INFO Injector:83 org.matsim.core.mobsim.qsim.DefaultTeleportationEngine 
2018-02-12 16:07:28,012  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5d3b58ca[Scopes.SINGLETON]
2018-02-12 16:07:28,012  INFO Injector:85   --> source: org.matsim.core.mobsim.qsim.TeleportationPlugin$1.configure(TeleportationPlugin.java:21)
2018-02-12 16:07:28,012  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:28,012  INFO Injector:91 
2018-02-12 16:07:28,012  INFO Injector:83 org.matsim.core.mobsim.qsim.agents.PopulationAgentSource 
2018-02-12 16:07:28,013  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@1d02af26[Scopes.SINGLETON]
2018-02-12 16:07:28,013  INFO Injector:85   --> source: org.matsim.core.mobsim.qsim.PopulationPlugin$1.configure(PopulationPlugin.java:26)
2018-02-12 16:07:28,013  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:28,013  INFO Injector:91 
2018-02-12 16:07:28,013  INFO Injector:83 org.matsim.core.mobsim.qsim.QSim 
2018-02-12 16:07:28,013  INFO Injector:84   --> provider: com.google.inject.internal.ConstructorBindingImpl$Factory@5cf8676a[Scopes.SINGLETON]
2018-02-12 16:07:28,013  INFO Injector:85   --> source: org.matsim.core.mobsim.qsim.QSimProvider$1.configure(QSimProvider.java:64)
2018-02-12 16:07:28,014  INFO Injector:87   --> scope: eager singleton
2018-02-12 16:07:28,014  INFO Injector:91 
2018-02-12 16:07:28,014  INFO MobsimListenerManager:49 calling addQueueSimulationListener
2018-02-12 16:07:28,014  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.qsim.messagequeueengine.MessageQueueEngine
2018-02-12 16:07:28,014  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimListener
2018-02-12 16:07:28,014  INFO MobsimListenerManager:53   assigned class org.matsim.core.mobsim.framework.listeners.MobsimListener to interface org.matsim.core.mobsim.framework.listeners.MobsimBeforeSimStepListener
2018-02-12 16:07:28,105  INFO QNetsimEngine:507 Assigned 3758 nodes and 11069 links to QSimEngineRunner #0
2018-02-12 16:07:28,141  INFO EventsManagerImpl:134  event # 1
2018-02-12 16:07:28,144  INFO EventsManagerImpl:134  event # 4
2018-02-12 16:07:28,145  INFO EventsManagerImpl:134  event # 16
2018-02-12 16:07:28,147  INFO EventsManagerImpl:134  event # 64
2018-02-12 16:07:28,152  INFO EventsManagerImpl:134  event # 256
2018-02-12 16:07:28,164  INFO EventsManagerImpl:134  event # 1024
2018-02-12 16:07:28,189  INFO EventsManagerImpl:134  event # 4096
2018-02-12 16:07:28,243  INFO QNetsimEngine:350 SIMULATION (QNetsimEngine) AT 00:00:00 : #links=102 #nodes=103
2018-02-12 16:07:28,243  INFO QSim:504 SIMULATION (NEW QSim) AT 00:00:00 : #Veh=17709 lost=0 simT=0.0s realT=0s; (s/r): 0.0
2018-02-12 16:07:28,243  INFO Gbl:52 used RAM: 565431416B = 552179kB = 539MB  free: 260322184B = 248MB  total: 825753600B = 787MB
2018-02-12 16:07:28,260  INFO EventsManagerImpl:134  event # 16384
2018-02-12 16:07:28,493  INFO EventsManagerImpl:134  event # 65536
2018-02-12 16:07:29,677  INFO EventsManagerImpl:134  event # 262144
2018-02-12 16:07:32,022  INFO QNetsimEngine:350 SIMULATION (QNetsimEngine) AT 01:00:00 : #links=166 #nodes=125
2018-02-12 16:07:32,022  INFO QSim:504 SIMULATION (NEW QSim) AT 01:00:00 : #Veh=9015 lost=0 simT=3600.0s realT=4s; (s/r): 900.0
2018-02-12 16:07:32,022  INFO Gbl:52 used RAM: 443003752B = 432620kB = 422MB  free: 428887192B = 409MB  total: 871890944B = 831MB
2018-02-12 16:07:32,935  INFO EventsManagerImpl:134  event # 1048576
2018-02-12 16:07:33,251  INFO QNetsimEngine:350 SIMULATION (QNetsimEngine) AT 02:00:00 : #links=77 #nodes=56
2018-02-12 16:07:33,252  INFO QSim:504 SIMULATION (NEW QSim) AT 02:00:00 : #Veh=3236 lost=0 simT=7200.0s realT=5s; (s/r): 1440.0
2018-02-12 16:07:33,252  INFO Gbl:52 used RAM: 627580200B = 612871kB = 598MB  free: 244310744B = 232MB  total: 871890944B = 831MB
2018-02-12 16:07:33,665  INFO QNetsimEngine:350 SIMULATION (QNetsimEngine) AT 03:00:00 : #links=50 #nodes=38
2018-02-12 16:07:33,665  INFO QSim:504 SIMULATION (NEW QSim) AT 03:00:00 : #Veh=1679 lost=0 simT=10800.0s realT=5s; (s/r): 2160.0
2018-02-12 16:07:33,665  INFO Gbl:52 used RAM: 702741048B = 686270kB = 670MB  free: 169149896B = 161MB  total: 871890944B = 831MB
2018-02-12 16:07:33,983  INFO QNetsimEngine:350 SIMULATION (QNetsimEngine) AT 04:00:00 : #links=19 #nodes=11
2018-02-12 16:07:33,989  INFO QSim:504 SIMULATION (NEW QSim) AT 04:00:00 : #Veh=971 lost=0 simT=14400.0s realT=6s; (s/r): 2400.0
2018-02-12 16:07:33,990  INFO Gbl:52 used RAM: 406830736B = 397295kB = 387MB  free: 490226032B = 467MB  total: 897056768B = 855MB
2018-02-12 16:07:34,156  INFO QNetsimEngine:350 SIMULATION (QNetsimEngine) AT 05:00:00 : #links=17 #nodes=8
2018-02-12 16:07:34,156  INFO QSim:504 SIMULATION (NEW QSim) AT 05:00:00 : #Veh=671 lost=0 simT=18000.0s realT=6s; (s/r): 3000.0
2018-02-12 16:07:34,156  INFO Gbl:52 used RAM: 420021688B = 410177kB = 400MB  free: 477035080B = 454MB  total: 897056768B = 855MB
2018-02-12 16:07:34,316  INFO QNetsimEngine:350 SIMULATION (QNetsimEngine) AT 06:00:00 : #links=14 #nodes=6
2018-02-12 16:07:34,316  INFO QSim:504 SIMULATION (NEW QSim) AT 06:00:00 : #Veh=371 lost=0 simT=21600.0s realT=6s; (s/r): 3600.0
2018-02-12 16:07:34,316  INFO Gbl:52 used RAM: 428447312B = 418405kB = 408MB  free: 468609456B = 446MB  total: 897056768B = 855MB
2018-02-12 16:07:34,463  INFO QNetsimEngine:350 SIMULATION (QNetsimEngine) AT 07:00:00 : #links=8 #nodes=1
2018-02-12 16:07:34,464  INFO QSim:504 SIMULATION (NEW QSim) AT 07:00:00 : #Veh=71 lost=0 simT=25200.0s realT=6s; (s/r): 4200.0
2018-02-12 16:07:34,464  INFO Gbl:52 used RAM: 434664528B = 424477kB = 414MB  free: 462392240B = 440MB  total: 897056768B = 855MB
2018-02-12 16:07:34,506  INFO Gbl:185 Thread performance: Thread=class org.matsim.core.events.SimStepParallelEventsManagerImpl$ProcessEventsRunnable0  cpu-time=5.324149sec
2018-02-12 16:07:34,506  INFO AbstractController$8:222 ### ITERATION 0 fires after mobsim event
2018-02-12 16:07:34,507  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.analysis.LegTimesControlerListener
2018-02-12 16:07:34,507  INFO LegTimesControlerListener:50 [0] average trip (probably: leg) duration is: 4964 seconds = 01:22:44
2018-02-12 16:07:34,507  INFO ControlerListenerManagerImpl:248 calling notifyAfterMobsim on org.matsim.core.scoring.EventsToActivities$1
2018-02-12 16:07:34,508  WARN CharyparNagelActivityScoring:252 The first and the last activity do not have the same type. 
2018-02-12 16:07:34,513  WARN CharyparNagelActivityScoring:253 Will score the first activity from midnight to its end, and the last activity from its start to midnight.
2018-02-12 16:07:34,513  WARN CharyparNagelActivityScoring:254 Because of the nonlinear function, this is not the same as scoring from start to end.
2018-02-12 16:07:34,514  WARN CharyparNagelActivityScoring:255 first activity: [type=home][coord=null][linkId=18248-1928][startTime=undefined][endTime=00:00:00][duration=undefined][facilityId=null]
2018-02-12 16:07:34,514  WARN CharyparNagelActivityScoring:256 last activity: [type=safe][coord=null][linkId=15136-24070][startTime=02:09:18][endTime=undefined][duration=undefined][facilityId=null]
2018-02-12 16:07:34,514  WARN CharyparNagelActivityScoring:257 This may also happen when plans are not completed when the simulation ends.
2018-02-12 16:07:34,514  WARN CharyparNagelActivityScoring:259 Additional warnings of this type are suppressed.
2018-02-12 16:07:34,535  INFO ControlerListenerManagerImpl:251 [it.0] all ControlerAfterMobsimListeners called.
2018-02-12 16:07:34,535  INFO AbstractController$4:159 ### ITERATION 0 fires scoring event
2018-02-12 16:07:34,535  INFO ControlerListenerManagerImpl:183 calling notifyScoring on org.matsim.core.scoring.PlansScoringImpl
2018-02-12 16:07:34,549  INFO NewScoreAssignerImpl:36 it: 0 msaStart: null
2018-02-12 16:07:34,562  INFO ControlerListenerManagerImpl:194 [it.0] all ControlerScoringListeners called.
2018-02-12 16:07:34,562  INFO AbstractController$5:167 ### ITERATION 0 fires iteration end event
2018-02-12 16:07:34,562  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-02-12 16:07:34,563  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2018-02-12 16:07:34,564  INFO EventsManagerImpl:161 removing Event-Handler: org.matsim.core.events.algorithms.EventWriterXML
2018-02-12 16:07:34,564  INFO ControlerListenerManagerImpl:160 calling notifyIterationEnds on org.matsim.core.scoring.PlansScoringImpl
2018-02-12 16:07:34,573  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.counts.CountsControlerListener
2018-02-12 16:07:34,573  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ModeStatsControlerListener
2018-02-12 16:07:34,588  INFO ModeStatsControlerListener:155 -- mode share of mode bike = 0.0
2018-02-12 16:07:34,588  INFO ModeStatsControlerListener:155 -- mode share of mode car = 1.0
2018-02-12 16:07:34,588  INFO ModeStatsControlerListener:155 -- mode share of mode other = 0.0
2018-02-12 16:07:34,589  INFO ModeStatsControlerListener:155 -- mode share of mode pt = 0.0
2018-02-12 16:07:34,589  INFO ModeStatsControlerListener:155 -- mode share of mode ride = 0.0
2018-02-12 16:07:34,589  INFO ModeStatsControlerListener:155 -- mode share of mode walk = 0.0
2018-02-12 16:07:34,589  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.ScoreStatsControlerListener
2018-02-12 16:07:34,596  INFO ScoreStatsControlerListener:191 -- avg. score of the executed plan of each agent: -8.274180172040605
2018-02-12 16:07:34,597  INFO ScoreStatsControlerListener:192 -- avg. score of the worst plan of each agent: -8.274180172040605
2018-02-12 16:07:34,597  INFO ScoreStatsControlerListener:193 -- avg. of the avg. plan score per agent: -8.274180172040605
2018-02-12 16:07:34,597  INFO ScoreStatsControlerListener:194 -- avg. score of the best plan of each agent: -8.274180172040605
2018-02-12 16:07:34,597  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.TravelDistanceStatsControlerListener
2018-02-12 16:07:34,600  INFO TravelDistanceStats:128 [TravelDistanceStats] using 2 thread(s).
2018-02-12 16:07:34,609  INFO TravelDistanceStats:141 [TravelDistanceStats] all threads finished.
2018-02-12 16:07:34,609  INFO TravelDistanceStats:161 -- average of the average leg distance per plan (executed plans only): 16695.460709888404
2018-02-12 16:07:34,609  INFO TravelDistanceStats:162 (TravelDistanceStats takes an average over all legs where the simulation reports travelled distances. These are car legs, pt legs,
2018-02-12 16:07:34,610  INFO TravelDistanceStats:163 (and teleported legs whose route contains a distance.)
2018-02-12 16:07:34,610  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LegHistogramListener
2018-02-12 16:07:34,611  INFO LegHistogramListener:72 number of legs:	17709	100%
2018-02-12 16:07:34,611  INFO LegHistogramListener:79 number of car legs:	17709	100.0%
2018-02-12 16:07:34,885  INFO ControlerListenerManagerImpl:167 calling notifyIterationEnds on org.matsim.analysis.LinkStatsControlerListener
2018-02-12 16:07:34,885  INFO ControlerListenerManagerImpl:171 [it.0] all ControlerIterationEndsListeners called.
2018-02-12 16:07:34,958  INFO AbstractController:177 ### ITERATION 0 ENDS
2018-02-12 16:07:34,958  INFO AbstractController:178 ###################################################
2018-02-12 16:07:34,959  INFO MatsimRuntimeModifications:58 S H U T D O W N   ---   start shutdown.
2018-02-12 16:07:34,959  INFO ControlerListenerManagerImpl:121 calling notifyShutdown on org.matsim.core.controler.corelisteners.EventsHandlingImpl
2018-02-12 16:07:34,959  INFO ControlerListenerManagerImpl:121 calling notifyShutdown on org.matsim.core.controler.corelisteners.DumpDataAtEndImpl
2018-02-12 16:07:34,967  INFO Counter:61 [PopulationWriter] dumped person # 1
2018-02-12 16:07:34,967  INFO Counter:61 [PopulationWriter] dumped person # 2
2018-02-12 16:07:34,968  INFO Counter:61 [PopulationWriter] dumped person # 4
2018-02-12 16:07:34,968  INFO Counter:61 [PopulationWriter] dumped person # 8
2018-02-12 16:07:34,968  INFO Counter:61 [PopulationWriter] dumped person # 16
2018-02-12 16:07:34,969  INFO Counter:61 [PopulationWriter] dumped person # 32
2018-02-12 16:07:34,970  INFO Counter:61 [PopulationWriter] dumped person # 64
2018-02-12 16:07:34,971  INFO Counter:61 [PopulationWriter] dumped person # 128
2018-02-12 16:07:34,973  INFO Counter:61 [PopulationWriter] dumped person # 256
2018-02-12 16:07:34,977  INFO Counter:61 [PopulationWriter] dumped person # 512
2018-02-12 16:07:34,984  INFO Counter:61 [PopulationWriter] dumped person # 1024
2018-02-12 16:07:34,996  INFO Counter:61 [PopulationWriter] dumped person # 2048
2018-02-12 16:07:35,020  INFO Counter:61 [PopulationWriter] dumped person # 4096
2018-02-12 16:07:35,060  INFO Counter:61 [PopulationWriter] dumped person # 8192
2018-02-12 16:07:35,153  INFO Counter:61 [PopulationWriter] dumped person # 16384
2018-02-12 16:07:35,169  INFO PopulationWriter:139 Population written to: test/output/org/matsim/run/RunMatsim4FloodEvacuationTest/test/output_plans.xml.gz
2018-02-12 16:07:35,170  INFO Counter:67 [PopulationWriter] dumped person # 17709
2018-02-12 16:07:35,170  INFO NetworkWriter:68 Writing network to file: test/output/org/matsim/run/RunMatsim4FloodEvacuationTest/test/output_network.xml.gz...
2018-02-12 16:07:35,237  INFO NetworkWriter:71 done.
2018-02-12 16:07:35,238  INFO Config:563 setting context to [file:/Users/kainagel/git/au-flood-evacuation/]
2018-02-12 16:07:35,266  INFO VehicleWriterV1:55 Vehicles written to: test/output/org/matsim/run/RunMatsim4FloodEvacuationTest/test/output_vehicles.xml.gz
2018-02-12 16:07:35,267  INFO Counter:67 [HouseholdsWriter] dumped household # 0
2018-02-12 16:07:35,267  INFO LanesWriter:65 Using LaneDefinitionWriter20...
2018-02-12 16:07:35,267  INFO LanesWriter:74 writing to file: test/output/org/matsim/run/RunMatsim4FloodEvacuationTest/test/output_lanes.xml.gz
2018-02-12 16:07:35,322  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ModeStatsControlerListener
2018-02-12 16:07:35,322  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.ScoreStatsControlerListener
2018-02-12 16:07:35,322  INFO ControlerListenerManagerImpl:126 calling notifyShutdown on org.matsim.analysis.TravelDistanceStatsControlerListener
2018-02-12 16:07:35,323  INFO ControlerListenerManagerImpl:129 all ControlerShutdownListeners called.
2018-02-12 16:07:35,323  INFO MatsimRuntimeModifications:81 S H U T D O W N   ---   shutdown completed.
2018-02-12 16:07:35,323  INFO OutputDirectoryLogging:169 closing the logfile, i.e. messages sent to the logger after this message are not written to the logfile.
